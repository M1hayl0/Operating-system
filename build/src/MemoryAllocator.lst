GAS LISTING /tmp/ccHYyRJz.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator10initializeEv
   9              	_ZN15MemoryAllocator10initializeEv:
  10              	.LFB0:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   2:src/MemoryAllocator.cpp **** 
   3:src/MemoryAllocator.cpp **** MemoryAllocator::MemSegment* MemoryAllocator::freeMemHead;
   4:src/MemoryAllocator.cpp **** MemoryAllocator::MemSegment* MemoryAllocator::usedMemHead;
   5:src/MemoryAllocator.cpp **** bool MemoryAllocator::initialized = false;
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** void MemoryAllocator::initialize() {
  12              		.loc 1 7 36
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   8:src/MemoryAllocator.cpp ****     freeMemHead = (MemSegment *) HEAP_START_ADDR;
  20              		.loc 1 8 5
  21              		.loc 1 8 17 is_stmt 0
  22 000c 17060000 		la	a2,HEAP_START_ADDR
  22      03360600 
  23 0014 03370600 		ld	a4,0(a2)
  24 0018 97070000 		lla	a5,.LANCHOR0
  24      93870700 
  25 0020 23B0E700 		sd	a4,0(a5)
   9:src/MemoryAllocator.cpp ****     freeMemHead->next = nullptr;
  26              		.loc 1 9 5 is_stmt 1
  27              		.loc 1 9 23 is_stmt 0
  28 0024 23300700 		sd	zero,0(a4)
  10:src/MemoryAllocator.cpp ****     freeMemHead->prev = nullptr;
  29              		.loc 1 10 5 is_stmt 1
  30              		.loc 1 10 18 is_stmt 0
  31 0028 83B60700 		ld	a3,0(a5)
  32              		.loc 1 10 23
  33 002c 23B40600 		sd	zero,8(a3)
  11:src/MemoryAllocator.cpp ****     freeMemHead->size = (uint64) HEAP_END_ADDR - (uint64) HEAP_START_ADDR;
  34              		.loc 1 11 5 is_stmt 1
  35              		.loc 1 11 48 is_stmt 0
  36 0030 17070000 		la	a4,HEAP_END_ADDR
  36      03370700 
  37 0038 03370700 		ld	a4,0(a4)
  38 003c 03360600 		ld	a2,0(a2)
  39 0040 3307C740 		sub	a4,a4,a2
  40              		.loc 1 11 23
  41 0044 23B8E600 		sd	a4,16(a3)
  12:src/MemoryAllocator.cpp ****     usedMemHead = nullptr;
  42              		.loc 1 12 5 is_stmt 1
  43              		.loc 1 12 17 is_stmt 0
GAS LISTING /tmp/ccHYyRJz.s 			page 2


  44 0048 23B40700 		sd	zero,8(a5)
  13:src/MemoryAllocator.cpp **** }
  45              		.loc 1 13 1
  46 004c 03348100 		ld	s0,8(sp)
  47              		.cfi_restore 8
  48              		.cfi_def_cfa 2, 16
  49 0050 13010101 		addi	sp,sp,16
  50              		.cfi_def_cfa_offset 0
  51 0054 67800000 		jr	ra
  52              		.cfi_endproc
  53              	.LFE0:
  55              		.align	2
  56              		.globl	_ZN15MemoryAllocator9mem_allocEm
  58              	_ZN15MemoryAllocator9mem_allocEm:
  59              	.LFB1:
  14:src/MemoryAllocator.cpp **** 
  15:src/MemoryAllocator.cpp **** void *MemoryAllocator::mem_alloc(uint64 size) {
  60              		.loc 1 15 47 is_stmt 1
  61              		.cfi_startproc
  62              	.LVL0:
  16:src/MemoryAllocator.cpp ****     if(size <= 0) return nullptr;
  63              		.loc 1 16 5
  64 0058 6300051A 		beqz	a0,.L20
  15:src/MemoryAllocator.cpp ****     if(size <= 0) return nullptr;
  65              		.loc 1 15 47 is_stmt 0
  66 005c 130101FE 		addi	sp,sp,-32
  67              		.cfi_def_cfa_offset 32
  68 0060 233C1100 		sd	ra,24(sp)
  69 0064 23388100 		sd	s0,16(sp)
  70 0068 23349100 		sd	s1,8(sp)
  71              		.cfi_offset 1, -8
  72              		.cfi_offset 8, -16
  73              		.cfi_offset 9, -24
  74 006c 13040102 		addi	s0,sp,32
  75              		.cfi_def_cfa 8, 0
  17:src/MemoryAllocator.cpp **** 
  18:src/MemoryAllocator.cpp ****     size *= MEM_BLOCK_SIZE;
  76              		.loc 1 18 5 is_stmt 1
  77              		.loc 1 18 10 is_stmt 0
  78 0070 93146500 		slli	s1,a0,6
  79              	.LVL1:
  19:src/MemoryAllocator.cpp **** 
  20:src/MemoryAllocator.cpp ****     if(!initialized) {
  80              		.loc 1 20 5 is_stmt 1
  81              		.loc 1 20 8 is_stmt 0
  82 0074 97070000 		lbu	a5,.LANCHOR0+16
  82      83C70700 
  83              		.loc 1 20 5
  84 007c 63820702 		beqz	a5,.L27
  85              	.L5:
  21:src/MemoryAllocator.cpp ****         initialize();
  22:src/MemoryAllocator.cpp ****         initialized = true;
  23:src/MemoryAllocator.cpp ****     }
  24:src/MemoryAllocator.cpp **** 
  25:src/MemoryAllocator.cpp ****     for(MemSegment *free = freeMemHead; free; free = free->next) {
  86              		.loc 1 25 5 is_stmt 1
  87              	.LBB2:
GAS LISTING /tmp/ccHYyRJz.s 			page 3


  88              		.loc 1 25 21 is_stmt 0
  89 0080 17070000 		ld	a4,.LANCHOR0
  89      03370700 
  90              	.LVL2:
  91 0088 13050700 		mv	a0,a4
  92              	.LVL3:
  93              	.L19:
  94              		.loc 1 25 41 is_stmt 1 discriminator 1
  95 008c 6308050E 		beqz	a0,.L3
  96              	.LBE2:
  26:src/MemoryAllocator.cpp ****         if(free->size >= size) {
  97              		.loc 1 26 9
  98              	.LBB13:
  99              	.LBB3:
 100              		.loc 1 26 18 is_stmt 0
 101 0090 83370501 		ld	a5,16(a0)
 102              		.loc 1 26 9
 103 0094 63F29702 		bgeu	a5,s1,.L28
 104              	.LBE3:
  25:src/MemoryAllocator.cpp ****         if(free->size >= size) {
 105              		.loc 1 25 5 is_stmt 1 discriminator 2
  25:src/MemoryAllocator.cpp ****         if(free->size >= size) {
 106              		.loc 1 25 52 is_stmt 0 discriminator 2
 107 0098 03350500 		ld	a0,0(a0)
 108              	.LVL4:
  25:src/MemoryAllocator.cpp ****         if(free->size >= size) {
 109              		.loc 1 25 5 discriminator 2
 110 009c 6FF01FFF 		j	.L19
 111              	.LVL5:
 112              	.L27:
 113              	.LBE13:
  21:src/MemoryAllocator.cpp ****         initialize();
 114              		.loc 1 21 9 is_stmt 1
  21:src/MemoryAllocator.cpp ****         initialize();
 115              		.loc 1 21 19 is_stmt 0
 116 00a0 97000000 		call	_ZN15MemoryAllocator10initializeEv
 116      E7800000 
 117              	.LVL6:
  22:src/MemoryAllocator.cpp ****     }
 118              		.loc 1 22 9 is_stmt 1
  22:src/MemoryAllocator.cpp ****     }
 119              		.loc 1 22 21 is_stmt 0
 120 00a8 93071000 		li	a5,1
 121 00ac 17070000 		sb	a5,.LANCHOR0+16,a4
 121      2300F700 
 122 00b4 6FF0DFFC 		j	.L5
 123              	.LVL7:
 124              	.L28:
 125              	.LBB14:
 126              	.LBB11:
 127              	.LBB4:
  27:src/MemoryAllocator.cpp ****             //novi iskorisceni segment
  28:src/MemoryAllocator.cpp ****             MemSegment *newUsed = free;
 128              		.loc 1 28 13 is_stmt 1
  29:src/MemoryAllocator.cpp **** 
  30:src/MemoryAllocator.cpp ****             //pokazivac se pomera pa moramo i sve podatke u strukturi da pomerimo
  31:src/MemoryAllocator.cpp ****             uint64 s = free->size;
GAS LISTING /tmp/ccHYyRJz.s 			page 4


 129              		.loc 1 31 13
  32:src/MemoryAllocator.cpp ****             MemSegment *n = free->next;
 130              		.loc 1 32 13
 131              		.loc 1 32 25 is_stmt 0
 132 00b8 83360500 		ld	a3,0(a0)
 133              	.LVL8:
  33:src/MemoryAllocator.cpp ****             MemSegment *p = free->prev;
 134              		.loc 1 33 13 is_stmt 1
 135              		.loc 1 33 25 is_stmt 0
 136 00bc 03368500 		ld	a2,8(a0)
 137              	.LVL9:
  34:src/MemoryAllocator.cpp ****             if(s - size) {
 138              		.loc 1 34 13 is_stmt 1
 139 00c0 638C9704 		beq	a5,s1,.L7
  35:src/MemoryAllocator.cpp ****                 if(freeMemHead == free) freeMemHead = (MemSegment *)((char *)free + size);
 140              		.loc 1 35 17
 141 00c4 6302E504 		beq	a0,a4,.L29
 142              	.L8:
  36:src/MemoryAllocator.cpp ****                 free = (MemSegment *)((char *)free + size);
 143              		.loc 1 36 17
 144              		.loc 1 36 22 is_stmt 0
 145 00c8 33079500 		add	a4,a0,s1
 146              	.LVL10:
  37:src/MemoryAllocator.cpp ****                 free->size = s - size;
 147              		.loc 1 37 17 is_stmt 1
 148              		.loc 1 37 32 is_stmt 0
 149 00cc B3879740 		sub	a5,a5,s1
 150              	.LVL11:
 151              		.loc 1 37 28
 152 00d0 2338F700 		sd	a5,16(a4)
 153              	.LVL12:
  38:src/MemoryAllocator.cpp ****                 free->next = n;
 154              		.loc 1 38 17 is_stmt 1
 155              		.loc 1 38 28 is_stmt 0
 156 00d4 2330D700 		sd	a3,0(a4)
  39:src/MemoryAllocator.cpp ****                 free->prev = p;
 157              		.loc 1 39 17 is_stmt 1
 158              		.loc 1 39 28 is_stmt 0
 159 00d8 2334C700 		sd	a2,8(a4)
  40:src/MemoryAllocator.cpp ****                 if(free->next) free->next->prev = free;
 160              		.loc 1 40 17 is_stmt 1
 161 00dc 63840600 		beqz	a3,.L9
 162              		.loc 1 40 32 discriminator 1
 163              		.loc 1 40 49 is_stmt 0 discriminator 1
 164 00e0 23B4E600 		sd	a4,8(a3)
 165              	.L9:
  41:src/MemoryAllocator.cpp ****                 if(free->prev) free->prev->next = free;
 166              		.loc 1 41 17 is_stmt 1
 167              		.loc 1 41 26 is_stmt 0
 168 00e4 83378700 		ld	a5,8(a4)
 169              		.loc 1 41 17
 170 00e8 63840700 		beqz	a5,.L10
 171              		.loc 1 41 32 is_stmt 1 discriminator 1
 172              		.loc 1 41 49 is_stmt 0 discriminator 1
 173 00ec 23B0E700 		sd	a4,0(a5)
 174              	.LVL13:
 175              	.L10:
GAS LISTING /tmp/ccHYyRJz.s 			page 5


  42:src/MemoryAllocator.cpp ****             } else {
  43:src/MemoryAllocator.cpp ****                 if (!free->prev && !free->next) {
  44:src/MemoryAllocator.cpp ****                     freeMemHead = nullptr;
  45:src/MemoryAllocator.cpp ****                 } else if(!free->prev) {
  46:src/MemoryAllocator.cpp ****                     freeMemHead = free->next;
  47:src/MemoryAllocator.cpp ****                     freeMemHead->prev = nullptr;
  48:src/MemoryAllocator.cpp ****                 } else if(!free->next) {
  49:src/MemoryAllocator.cpp ****                     free->prev->next = nullptr;
  50:src/MemoryAllocator.cpp ****                 } else {
  51:src/MemoryAllocator.cpp ****                     free->prev->next = free->next;
  52:src/MemoryAllocator.cpp ****                     free->next->prev = free->prev;
  53:src/MemoryAllocator.cpp ****                 }
  54:src/MemoryAllocator.cpp ****             }
  55:src/MemoryAllocator.cpp **** 
  56:src/MemoryAllocator.cpp ****             newUsed->size = size;
 176              		.loc 1 56 13 is_stmt 1
 177              		.loc 1 56 27 is_stmt 0
 178 00f0 23389500 		sd	s1,16(a0)
  57:src/MemoryAllocator.cpp ****             if(!usedMemHead) {
 179              		.loc 1 57 13 is_stmt 1
 180              	.LBB5:
 181              		.loc 1 57 16 is_stmt 0
 182 00f4 97060000 		ld	a3,.LANCHOR0+8
 182      83B60600 
 183              	.LVL14:
 184              		.loc 1 57 13
 185 00fc 63820606 		beqz	a3,.L30
 186              	.LBB6:
  58:src/MemoryAllocator.cpp ****                 usedMemHead = newUsed;
  59:src/MemoryAllocator.cpp ****                 usedMemHead->next = nullptr;
  60:src/MemoryAllocator.cpp ****                 usedMemHead->prev = nullptr;
  61:src/MemoryAllocator.cpp ****             } else {
  62:src/MemoryAllocator.cpp ****                 //ulancavanje newUsed u listu
  63:src/MemoryAllocator.cpp ****                 for(MemSegment *used = usedMemHead; used; used = used->next) {
 187              		.loc 1 63 33
 188 0100 93870600 		mv	a5,a3
 189 0104 6F004009 		j	.L14
 190              	.LVL15:
 191              	.L29:
 192              	.LBE6:
 193              	.LBE5:
  35:src/MemoryAllocator.cpp ****                 free = (MemSegment *)((char *)free + size);
 194              		.loc 1 35 41 is_stmt 1 discriminator 1
  35:src/MemoryAllocator.cpp ****                 free = (MemSegment *)((char *)free + size);
 195              		.loc 1 35 55 is_stmt 0 discriminator 1
 196 0108 33079500 		add	a4,a0,s1
  35:src/MemoryAllocator.cpp ****                 free = (MemSegment *)((char *)free + size);
 197              		.loc 1 35 53 discriminator 1
 198 010c 97050000 		sd	a4,.LANCHOR0,a1
 198      23B0E500 
 199 0114 6FF05FFB 		j	.L8
 200              	.L7:
  43:src/MemoryAllocator.cpp ****                     freeMemHead = nullptr;
 201              		.loc 1 43 17 is_stmt 1
 202 0118 63000602 		beqz	a2,.L31
 203              	.L11:
  45:src/MemoryAllocator.cpp ****                     freeMemHead = free->next;
GAS LISTING /tmp/ccHYyRJz.s 			page 6


 204              		.loc 1 45 24
 205 011c 63060602 		beqz	a2,.L32
  48:src/MemoryAllocator.cpp ****                     free->prev->next = nullptr;
 206              		.loc 1 48 24
 207 0120 638C0602 		beqz	a3,.L33
  51:src/MemoryAllocator.cpp ****                     free->next->prev = free->prev;
 208              		.loc 1 51 21
  51:src/MemoryAllocator.cpp ****                     free->next->prev = free->prev;
 209              		.loc 1 51 38 is_stmt 0
 210 0124 2330D600 		sd	a3,0(a2)
  52:src/MemoryAllocator.cpp ****                 }
 211              		.loc 1 52 21 is_stmt 1
  52:src/MemoryAllocator.cpp ****                 }
 212              		.loc 1 52 27 is_stmt 0
 213 0128 83370500 		ld	a5,0(a0)
 214              	.LVL16:
  52:src/MemoryAllocator.cpp ****                 }
 215              		.loc 1 52 46
 216 012c 03378500 		ld	a4,8(a0)
  52:src/MemoryAllocator.cpp ****                 }
 217              		.loc 1 52 38
 218 0130 23B4E700 		sd	a4,8(a5)
 219 0134 6FF0DFFB 		j	.L10
 220              	.LVL17:
 221              	.L31:
  43:src/MemoryAllocator.cpp ****                     freeMemHead = nullptr;
 222              		.loc 1 43 33 discriminator 1
 223 0138 E39206FE 		bnez	a3,.L11
  44:src/MemoryAllocator.cpp ****                 } else if(!free->prev) {
 224              		.loc 1 44 21 is_stmt 1
  44:src/MemoryAllocator.cpp ****                 } else if(!free->prev) {
 225              		.loc 1 44 33 is_stmt 0
 226 013c 97070000 		sd	zero,.LANCHOR0,a5
 226      23B00700 
 227              	.LVL18:
 228 0144 6FF0DFFA 		j	.L10
 229              	.LVL19:
 230              	.L32:
  46:src/MemoryAllocator.cpp ****                     freeMemHead->prev = nullptr;
 231              		.loc 1 46 21 is_stmt 1
  46:src/MemoryAllocator.cpp ****                     freeMemHead->prev = nullptr;
 232              		.loc 1 46 33 is_stmt 0
 233 0148 97070000 		sd	a3,.LANCHOR0,a5
 233      23B0D700 
 234              	.LVL20:
  47:src/MemoryAllocator.cpp ****                 } else if(!free->next) {
 235              		.loc 1 47 21 is_stmt 1
  47:src/MemoryAllocator.cpp ****                 } else if(!free->next) {
 236              		.loc 1 47 39 is_stmt 0
 237 0150 23B40600 		sd	zero,8(a3)
 238              	.LVL21:
 239 0154 6FF0DFF9 		j	.L10
 240              	.LVL22:
 241              	.L33:
  49:src/MemoryAllocator.cpp ****                 } else {
 242              		.loc 1 49 21 is_stmt 1
  49:src/MemoryAllocator.cpp ****                 } else {
GAS LISTING /tmp/ccHYyRJz.s 			page 7


 243              		.loc 1 49 38 is_stmt 0
 244 0158 23300600 		sd	zero,0(a2)
 245 015c 6FF05FF9 		j	.L10
 246              	.LVL23:
 247              	.L30:
 248              	.LBB8:
  58:src/MemoryAllocator.cpp ****                 usedMemHead->next = nullptr;
 249              		.loc 1 58 17 is_stmt 1
  58:src/MemoryAllocator.cpp ****                 usedMemHead->next = nullptr;
 250              		.loc 1 58 29 is_stmt 0
 251 0160 97070000 		lla	a5,.LANCHOR0
 251      93870700 
 252 0168 23B4A700 		sd	a0,8(a5)
  59:src/MemoryAllocator.cpp ****                 usedMemHead->prev = nullptr;
 253              		.loc 1 59 17 is_stmt 1
  59:src/MemoryAllocator.cpp ****                 usedMemHead->prev = nullptr;
 254              		.loc 1 59 35 is_stmt 0
 255 016c 23300500 		sd	zero,0(a0)
  60:src/MemoryAllocator.cpp ****             } else {
 256              		.loc 1 60 17 is_stmt 1
  60:src/MemoryAllocator.cpp ****             } else {
 257              		.loc 1 60 30 is_stmt 0
 258 0170 83B78700 		ld	a5,8(a5)
  60:src/MemoryAllocator.cpp ****             } else {
 259              		.loc 1 60 35
 260 0174 23B40700 		sd	zero,8(a5)
 261              	.L15:
 262              	.LBE8:
  64:src/MemoryAllocator.cpp ****                     if(!used->next && used < newUsed) {
  65:src/MemoryAllocator.cpp ****                         //dodavanje na kraj liste
  66:src/MemoryAllocator.cpp ****                         used->next = newUsed;
  67:src/MemoryAllocator.cpp ****                         newUsed->prev = used;
  68:src/MemoryAllocator.cpp ****                         newUsed->next = nullptr;
  69:src/MemoryAllocator.cpp ****                         break;
  70:src/MemoryAllocator.cpp ****                     } else if(used > newUsed) {
  71:src/MemoryAllocator.cpp ****                         //ubaciti newUsed izmedju used->prev i used
  72:src/MemoryAllocator.cpp ****                         if(used == usedMemHead) {
  73:src/MemoryAllocator.cpp ****                             newUsed->prev = nullptr;
  74:src/MemoryAllocator.cpp ****                             newUsed->next = used;
  75:src/MemoryAllocator.cpp ****                             used->prev = newUsed;
  76:src/MemoryAllocator.cpp ****                             usedMemHead = newUsed;
  77:src/MemoryAllocator.cpp ****                         } else {
  78:src/MemoryAllocator.cpp ****                             newUsed->prev = used->prev;
  79:src/MemoryAllocator.cpp ****                             newUsed->next = used;
  80:src/MemoryAllocator.cpp ****                             if(newUsed->prev) newUsed->prev->next = newUsed;
  81:src/MemoryAllocator.cpp ****                             if(newUsed->next) newUsed->next->prev = newUsed;
  82:src/MemoryAllocator.cpp ****                         }
  83:src/MemoryAllocator.cpp ****                         break;
  84:src/MemoryAllocator.cpp ****                     }
  85:src/MemoryAllocator.cpp ****                 }
  86:src/MemoryAllocator.cpp ****             }
  87:src/MemoryAllocator.cpp ****             return (char *)newUsed + sizeof(MemoryAllocator::MemSegment);
 263              		.loc 1 87 13 is_stmt 1
 264              		.loc 1 87 72 is_stmt 0
 265 0178 13058501 		addi	a0,a0,24
 266              	.LVL24:
 267              	.L3:
GAS LISTING /tmp/ccHYyRJz.s 			page 8


 268              	.LBE4:
 269              	.LBE11:
 270              	.LBE14:
  88:src/MemoryAllocator.cpp ****         }
  89:src/MemoryAllocator.cpp ****     }
  90:src/MemoryAllocator.cpp ****     return nullptr;
  91:src/MemoryAllocator.cpp **** }
 271              		.loc 1 91 1
 272 017c 83308101 		ld	ra,24(sp)
 273              		.cfi_remember_state
 274              		.cfi_restore 1
 275 0180 03340101 		ld	s0,16(sp)
 276              		.cfi_restore 8
 277              		.cfi_def_cfa 2, 32
 278 0184 83348100 		ld	s1,8(sp)
 279              		.cfi_restore 9
 280              	.LVL25:
 281 0188 13010102 		addi	sp,sp,32
 282              		.cfi_def_cfa_offset 0
 283 018c 67800000 		jr	ra
 284              	.LVL26:
 285              	.L16:
 286              		.cfi_restore_state
 287              	.LBB15:
 288              	.LBB12:
 289              	.LBB10:
 290              	.LBB9:
 291              	.LBB7:
  70:src/MemoryAllocator.cpp ****                         //ubaciti newUsed izmedju used->prev i used
 292              		.loc 1 70 28 is_stmt 1
 293 0190 6364F502 		bltu	a0,a5,.L34
  63:src/MemoryAllocator.cpp ****                     if(!used->next && used < newUsed) {
 294              		.loc 1 63 64 is_stmt 0
 295 0194 93070700 		mv	a5,a4
 296              	.LVL27:
 297              	.L14:
  63:src/MemoryAllocator.cpp ****                     if(!used->next && used < newUsed) {
 298              		.loc 1 63 53 is_stmt 1 discriminator 1
 299 0198 E38007FE 		beqz	a5,.L15
  64:src/MemoryAllocator.cpp ****                         //dodavanje na kraj liste
 300              		.loc 1 64 21
  64:src/MemoryAllocator.cpp ****                         //dodavanje na kraj liste
 301              		.loc 1 64 31 is_stmt 0
 302 019c 03B70700 		ld	a4,0(a5)
  64:src/MemoryAllocator.cpp ****                         //dodavanje na kraj liste
 303              		.loc 1 64 21
 304 01a0 E31807FE 		bnez	a4,.L16
  64:src/MemoryAllocator.cpp ****                         //dodavanje na kraj liste
 305              		.loc 1 64 36 discriminator 1
 306 01a4 E3F6A7FE 		bleu	a0,a5,.L16
  66:src/MemoryAllocator.cpp ****                         newUsed->prev = used;
 307              		.loc 1 66 25 is_stmt 1
  66:src/MemoryAllocator.cpp ****                         newUsed->prev = used;
 308              		.loc 1 66 36 is_stmt 0
 309 01a8 23B0A700 		sd	a0,0(a5)
  67:src/MemoryAllocator.cpp ****                         newUsed->next = nullptr;
 310              		.loc 1 67 25 is_stmt 1
GAS LISTING /tmp/ccHYyRJz.s 			page 9


  67:src/MemoryAllocator.cpp ****                         newUsed->next = nullptr;
 311              		.loc 1 67 39 is_stmt 0
 312 01ac 2334F500 		sd	a5,8(a0)
  68:src/MemoryAllocator.cpp ****                         break;
 313              		.loc 1 68 25 is_stmt 1
  68:src/MemoryAllocator.cpp ****                         break;
 314              		.loc 1 68 39 is_stmt 0
 315 01b0 23300500 		sd	zero,0(a0)
  69:src/MemoryAllocator.cpp ****                     } else if(used > newUsed) {
 316              		.loc 1 69 25 is_stmt 1
 317 01b4 6FF05FFC 		j	.L15
 318              	.L34:
  72:src/MemoryAllocator.cpp ****                             newUsed->prev = nullptr;
 319              		.loc 1 72 25
 320 01b8 6384F602 		beq	a3,a5,.L35
  78:src/MemoryAllocator.cpp ****                             newUsed->next = used;
 321              		.loc 1 78 29
  78:src/MemoryAllocator.cpp ****                             newUsed->next = used;
 322              		.loc 1 78 51 is_stmt 0
 323 01bc 03B78700 		ld	a4,8(a5)
  78:src/MemoryAllocator.cpp ****                             newUsed->next = used;
 324              		.loc 1 78 43
 325 01c0 2334E500 		sd	a4,8(a0)
  79:src/MemoryAllocator.cpp ****                             if(newUsed->prev) newUsed->prev->next = newUsed;
 326              		.loc 1 79 29 is_stmt 1
  79:src/MemoryAllocator.cpp ****                             if(newUsed->prev) newUsed->prev->next = newUsed;
 327              		.loc 1 79 43 is_stmt 0
 328 01c4 2330F500 		sd	a5,0(a0)
  80:src/MemoryAllocator.cpp ****                             if(newUsed->next) newUsed->next->prev = newUsed;
 329              		.loc 1 80 29 is_stmt 1
 330 01c8 63040700 		beqz	a4,.L18
  80:src/MemoryAllocator.cpp ****                             if(newUsed->next) newUsed->next->prev = newUsed;
 331              		.loc 1 80 47 discriminator 1
  80:src/MemoryAllocator.cpp ****                             if(newUsed->next) newUsed->next->prev = newUsed;
 332              		.loc 1 80 67 is_stmt 0 discriminator 1
 333 01cc 2330A700 		sd	a0,0(a4)
 334              	.L18:
  81:src/MemoryAllocator.cpp ****                         }
 335              		.loc 1 81 29 is_stmt 1
  81:src/MemoryAllocator.cpp ****                         }
 336              		.loc 1 81 41 is_stmt 0
 337 01d0 83370500 		ld	a5,0(a0)
 338              	.LVL28:
  81:src/MemoryAllocator.cpp ****                         }
 339              		.loc 1 81 29
 340 01d4 E38207FA 		beqz	a5,.L15
  81:src/MemoryAllocator.cpp ****                         }
 341              		.loc 1 81 47 is_stmt 1 discriminator 1
  81:src/MemoryAllocator.cpp ****                         }
 342              		.loc 1 81 67 is_stmt 0 discriminator 1
 343 01d8 23B4A700 		sd	a0,8(a5)
 344 01dc 6FF0DFF9 		j	.L15
 345              	.LVL29:
 346              	.L35:
  73:src/MemoryAllocator.cpp ****                             newUsed->next = used;
 347              		.loc 1 73 29 is_stmt 1
  73:src/MemoryAllocator.cpp ****                             newUsed->next = used;
GAS LISTING /tmp/ccHYyRJz.s 			page 10


 348              		.loc 1 73 43 is_stmt 0
 349 01e0 23340500 		sd	zero,8(a0)
  74:src/MemoryAllocator.cpp ****                             used->prev = newUsed;
 350              		.loc 1 74 29 is_stmt 1
  74:src/MemoryAllocator.cpp ****                             used->prev = newUsed;
 351              		.loc 1 74 43 is_stmt 0
 352 01e4 2330F500 		sd	a5,0(a0)
  75:src/MemoryAllocator.cpp ****                             usedMemHead = newUsed;
 353              		.loc 1 75 29 is_stmt 1
  75:src/MemoryAllocator.cpp ****                             usedMemHead = newUsed;
 354              		.loc 1 75 40 is_stmt 0
 355 01e8 23B4A700 		sd	a0,8(a5)
  76:src/MemoryAllocator.cpp ****                         } else {
 356              		.loc 1 76 29 is_stmt 1
  76:src/MemoryAllocator.cpp ****                         } else {
 357              		.loc 1 76 41 is_stmt 0
 358 01ec 97070000 		sd	a0,.LANCHOR0+8,a5
 358      23B0A700 
 359              	.LVL30:
 360 01f4 6FF05FF8 		j	.L15
 361              	.LVL31:
 362              	.L20:
 363              		.cfi_def_cfa_register 2
 364              		.cfi_restore 1
 365              		.cfi_restore 8
 366              		.cfi_restore 9
 367              	.LBE7:
 368              	.LBE9:
 369              	.LBE10:
 370              	.LBE12:
 371              	.LBE15:
  16:src/MemoryAllocator.cpp **** 
 372              		.loc 1 16 26
 373 01f8 13050000 		li	a0,0
 374              	.LVL32:
 375              		.loc 1 91 1
 376 01fc 67800000 		ret
 377              		.cfi_endproc
 378              	.LFE1:
 380              		.align	2
 381              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 383              	_ZN15MemoryAllocator8mem_freeEPv:
 384              	.LFB2:
  92:src/MemoryAllocator.cpp **** 
  93:src/MemoryAllocator.cpp **** int MemoryAllocator::mem_free(void *adress) {
 385              		.loc 1 93 45 is_stmt 1
 386              		.cfi_startproc
 387              	.LVL33:
 388 0200 130101FF 		addi	sp,sp,-16
 389              		.cfi_def_cfa_offset 16
 390 0204 23348100 		sd	s0,8(sp)
 391              		.cfi_offset 8, -8
 392 0208 13040101 		addi	s0,sp,16
 393              		.cfi_def_cfa 8, 0
  94:src/MemoryAllocator.cpp ****     if(!adress) return -1;
 394              		.loc 1 94 5
 395 020c 6302051A 		beqz	a0,.L51
GAS LISTING /tmp/ccHYyRJz.s 			page 11


  95:src/MemoryAllocator.cpp ****     adress = (char *)adress - sizeof(MemoryAllocator::MemSegment);
 396              		.loc 1 95 5
 397              		.loc 1 95 12 is_stmt 0
 398 0210 130585FE 		addi	a0,a0,-24
 399              	.LVL34:
  96:src/MemoryAllocator.cpp **** 
  97:src/MemoryAllocator.cpp ****     for(MemSegment *used = usedMemHead; used; used = used->next) {
 400              		.loc 1 97 5 is_stmt 1
 401              	.LBB16:
 402              		.loc 1 97 21 is_stmt 0
 403 0214 97070000 		ld	a5,.LANCHOR0+8
 403      83B70700 
 404              	.LVL35:
 405 021c 6F000015 		j	.L50
 406              	.LVL36:
 407              	.L60:
 408              	.LBB17:
 409              	.LBB18:
  98:src/MemoryAllocator.cpp ****         if(used == adress) {
  99:src/MemoryAllocator.cpp ****             //novi slobodan segment
 100:src/MemoryAllocator.cpp ****             MemSegment *newFree = used;
 101:src/MemoryAllocator.cpp **** 
 102:src/MemoryAllocator.cpp ****             //izbaciti used iz liste
 103:src/MemoryAllocator.cpp ****             if (!used->prev && !used->next) {
 410              		.loc 1 103 39 discriminator 1
 411 0220 83B60700 		ld	a3,0(a5)
 412              		.loc 1 103 29 discriminator 1
 413 0224 639C0614 		bnez	a3,.L39
 104:src/MemoryAllocator.cpp ****                 usedMemHead = nullptr;
 414              		.loc 1 104 17 is_stmt 1
 415              		.loc 1 104 29 is_stmt 0
 416 0228 17070000 		sd	zero,.LANCHOR0+8,a4
 416      23300700 
 417 0230 6F000017 		j	.L40
 418              	.L61:
 105:src/MemoryAllocator.cpp ****             } else if(!used->prev) {
 106:src/MemoryAllocator.cpp ****                 usedMemHead = used->next;
 419              		.loc 1 106 17 is_stmt 1
 420              		.loc 1 106 37 is_stmt 0
 421 0234 03B70700 		ld	a4,0(a5)
 422              		.loc 1 106 29
 423 0238 97060000 		sd	a4,.LANCHOR0+8,a3
 423      23B0E600 
 107:src/MemoryAllocator.cpp ****                 usedMemHead->prev = nullptr;
 424              		.loc 1 107 17 is_stmt 1
 425              		.loc 1 107 35 is_stmt 0
 426 0240 23340700 		sd	zero,8(a4)
 108:src/MemoryAllocator.cpp ****                 used->next = nullptr;
 427              		.loc 1 108 17 is_stmt 1
 428              		.loc 1 108 28 is_stmt 0
 429 0244 23B00700 		sd	zero,0(a5)
 430 0248 6F008015 		j	.L40
 431              	.L62:
 109:src/MemoryAllocator.cpp ****             } else if(!used->next) {
 110:src/MemoryAllocator.cpp ****                 used->prev->next = nullptr;
 432              		.loc 1 110 17 is_stmt 1
 433              		.loc 1 110 34 is_stmt 0
GAS LISTING /tmp/ccHYyRJz.s 			page 12


 434 024c 23300700 		sd	zero,0(a4)
 111:src/MemoryAllocator.cpp ****                 used->prev = nullptr;
 435              		.loc 1 111 17 is_stmt 1
 436              		.loc 1 111 28 is_stmt 0
 437 0250 23B40700 		sd	zero,8(a5)
 438 0254 6F00C014 		j	.L40
 439              	.LVL37:
 440              	.L53:
 441              	.LBB19:
 112:src/MemoryAllocator.cpp ****             } else {
 113:src/MemoryAllocator.cpp ****                 used->prev->next = used->next;
 114:src/MemoryAllocator.cpp ****                 used->next->prev = used->prev;
 115:src/MemoryAllocator.cpp ****                 used->prev = nullptr;
 116:src/MemoryAllocator.cpp ****                 used->next = nullptr;
 117:src/MemoryAllocator.cpp ****             }
 118:src/MemoryAllocator.cpp **** 
 119:src/MemoryAllocator.cpp ****             //ulancavanje newFree u listu
 120:src/MemoryAllocator.cpp ****             for(MemSegment *free = freeMemHead; free; free = free->next) {
 442              		.loc 1 120 60
 443 0258 13870600 		mv	a4,a3
 444              	.LVL38:
 445              	.L48:
 446              		.loc 1 120 49 is_stmt 1 discriminator 1
 447 025c 63060710 		beqz	a4,.L38
 448              	.LBE19:
 449              	.LBE18:
 450              	.LBE17:
 451              	.LBE16:
 121:src/MemoryAllocator.cpp ****                 if(free > newFree) {
 452              		.loc 1 121 17
 453              	.LBB43:
 454              	.LBB39:
 455              	.LBB35:
 456              	.LBB31:
 457              	.LBB20:
 458 0260 63EAE702 		bltu	a5,a4,.L55
 459              	.LBE20:
 460              	.LBE31:
 461              	.LBE35:
 462              	.LBE39:
 463              	.LBE43:
 122:src/MemoryAllocator.cpp ****                     //ubaciti newFree izmedju free->prev i free
 123:src/MemoryAllocator.cpp ****                     if(free == freeMemHead) {
 124:src/MemoryAllocator.cpp ****                         newFree->prev = nullptr;
 125:src/MemoryAllocator.cpp ****                         newFree->next = free;
 126:src/MemoryAllocator.cpp ****                         free->prev = newFree;
 127:src/MemoryAllocator.cpp ****                         freeMemHead = newFree;
 128:src/MemoryAllocator.cpp ****                     } else {
 129:src/MemoryAllocator.cpp ****                         newFree->prev = free->prev;
 130:src/MemoryAllocator.cpp ****                         newFree->next = free;
 131:src/MemoryAllocator.cpp ****                         newFree->prev->next = newFree;
 132:src/MemoryAllocator.cpp ****                         newFree->next->prev = newFree;
 133:src/MemoryAllocator.cpp ****                     }
 134:src/MemoryAllocator.cpp **** 
 135:src/MemoryAllocator.cpp ****                     //spajanje slobodnih segmenata
 136:src/MemoryAllocator.cpp ****                     MemSegment *cur = newFree;
 137:src/MemoryAllocator.cpp ****                     if(cur->next && (char *)cur + cur->size == (char *)cur->next) {
GAS LISTING /tmp/ccHYyRJz.s 			page 13


 138:src/MemoryAllocator.cpp ****                         cur->size += cur->next->size;
 139:src/MemoryAllocator.cpp ****                         cur->next = cur->next->next;
 140:src/MemoryAllocator.cpp ****                         if(cur->next) cur->next->prev = cur;
 141:src/MemoryAllocator.cpp ****                     }
 142:src/MemoryAllocator.cpp **** 
 143:src/MemoryAllocator.cpp ****                     if(newFree->prev) {
 144:src/MemoryAllocator.cpp ****                         cur = newFree->prev;
 145:src/MemoryAllocator.cpp ****                         if(cur->next && (char *)cur + cur->size == (char *)cur->next) {
 146:src/MemoryAllocator.cpp ****                             cur->size += cur->next->size;
 147:src/MemoryAllocator.cpp ****                             cur->next = cur->next->next;
 148:src/MemoryAllocator.cpp ****                             if(cur->next) cur->next->prev = cur;
 149:src/MemoryAllocator.cpp ****                         }
 150:src/MemoryAllocator.cpp ****                     }
 151:src/MemoryAllocator.cpp ****                     return 0;
 152:src/MemoryAllocator.cpp ****                 } else if(!free->next) {
 464              		.loc 1 152 24
 465              	.LBB44:
 466              	.LBB40:
 467              	.LBB36:
 468              	.LBB32:
 469              	.LBB29:
 470              	.LBB21:
 471              		.loc 1 152 34 is_stmt 0
 472 0264 83360700 		ld	a3,0(a4)
 473              		.loc 1 152 24
 474 0268 E39806FE 		bnez	a3,.L53
 475              	.LBB22:
 153:src/MemoryAllocator.cpp ****                     //dodavanje na kraj liste
 154:src/MemoryAllocator.cpp ****                     free->next = newFree;
 476              		.loc 1 154 21 is_stmt 1
 477              		.loc 1 154 32 is_stmt 0
 478 026c 2330F700 		sd	a5,0(a4)
 155:src/MemoryAllocator.cpp ****                     newFree->prev = free;
 479              		.loc 1 155 21 is_stmt 1
 480              		.loc 1 155 35 is_stmt 0
 481 0270 23B4E700 		sd	a4,8(a5)
 156:src/MemoryAllocator.cpp ****                     newFree->next = nullptr;
 482              		.loc 1 156 21 is_stmt 1
 483              		.loc 1 156 35 is_stmt 0
 484 0274 23B00700 		sd	zero,0(a5)
 157:src/MemoryAllocator.cpp **** 
 158:src/MemoryAllocator.cpp ****                     //spajanje slobodnih segmenata
 159:src/MemoryAllocator.cpp ****                     if(newFree->prev) {
 485              		.loc 1 159 21 is_stmt 1
 486              	.LBB23:
 160:src/MemoryAllocator.cpp ****                         MemSegment *cur = newFree->prev;
 487              		.loc 1 160 25
 488              	.LVL39:
 161:src/MemoryAllocator.cpp ****                         if (cur->next && (char *) cur + cur->size == (char *) cur->next) {
 489              		.loc 1 161 25
 490              		.loc 1 161 34 is_stmt 0
 491 0278 83370700 		ld	a5,0(a4)
 492              	.LVL40:
 493              		.loc 1 161 25
 494 027c 63880700 		beqz	a5,.L49
 495              		.loc 1 161 62 discriminator 1
 496 0280 83360701 		ld	a3,16(a4)
GAS LISTING /tmp/ccHYyRJz.s 			page 14


 497              		.loc 1 161 55 discriminator 1
 498 0284 3306D700 		add	a2,a4,a3
 499              		.loc 1 161 39 discriminator 1
 500 0288 6380C70C 		beq	a5,a2,.L56
 501              	.L49:
 502              	.LBE23:
 162:src/MemoryAllocator.cpp ****                             cur->size += cur->next->size;
 163:src/MemoryAllocator.cpp ****                             cur->next = cur->next->next;
 164:src/MemoryAllocator.cpp ****                             if (cur->next) cur->next->prev = cur;
 165:src/MemoryAllocator.cpp ****                         }
 166:src/MemoryAllocator.cpp ****                     }
 167:src/MemoryAllocator.cpp ****                     return 0;
 503              		.loc 1 167 21 is_stmt 1
 504              		.loc 1 167 28 is_stmt 0
 505 028c 13050000 		li	a0,0
 506              	.LVL41:
 507 0290 6F004005 		j	.L37
 508              	.LVL42:
 509              	.L55:
 510              	.LBE22:
 511              	.LBE21:
 512              	.LBB26:
 123:src/MemoryAllocator.cpp ****                         newFree->prev = nullptr;
 513              		.loc 1 123 21 is_stmt 1
 514 0294 630EC704 		beq	a4,a2,.L57
 129:src/MemoryAllocator.cpp ****                         newFree->next = free;
 515              		.loc 1 129 25
 129:src/MemoryAllocator.cpp ****                         newFree->next = free;
 516              		.loc 1 129 47 is_stmt 0
 517 0298 83368700 		ld	a3,8(a4)
 129:src/MemoryAllocator.cpp ****                         newFree->next = free;
 518              		.loc 1 129 39
 519 029c 23B4D700 		sd	a3,8(a5)
 130:src/MemoryAllocator.cpp ****                         newFree->prev->next = newFree;
 520              		.loc 1 130 25 is_stmt 1
 130:src/MemoryAllocator.cpp ****                         newFree->prev->next = newFree;
 521              		.loc 1 130 39 is_stmt 0
 522 02a0 23B0E700 		sd	a4,0(a5)
 131:src/MemoryAllocator.cpp ****                         newFree->next->prev = newFree;
 523              		.loc 1 131 25 is_stmt 1
 131:src/MemoryAllocator.cpp ****                         newFree->next->prev = newFree;
 524              		.loc 1 131 45 is_stmt 0
 525 02a4 23B0F600 		sd	a5,0(a3)
 132:src/MemoryAllocator.cpp ****                     }
 526              		.loc 1 132 25 is_stmt 1
 132:src/MemoryAllocator.cpp ****                     }
 527              		.loc 1 132 34 is_stmt 0
 528 02a8 03B70700 		ld	a4,0(a5)
 529              	.LVL43:
 132:src/MemoryAllocator.cpp ****                     }
 530              		.loc 1 132 45
 531 02ac 2334F700 		sd	a5,8(a4)
 532              	.L45:
 136:src/MemoryAllocator.cpp ****                     if(cur->next && (char *)cur + cur->size == (char *)cur->next) {
 533              		.loc 1 136 21 is_stmt 1
 534              	.LVL44:
 137:src/MemoryAllocator.cpp ****                         cur->size += cur->next->size;
GAS LISTING /tmp/ccHYyRJz.s 			page 15


 535              		.loc 1 137 21
 137:src/MemoryAllocator.cpp ****                         cur->size += cur->next->size;
 536              		.loc 1 137 29 is_stmt 0
 537 02b0 03B70700 		ld	a4,0(a5)
 137:src/MemoryAllocator.cpp ****                         cur->size += cur->next->size;
 538              		.loc 1 137 21
 539 02b4 63080700 		beqz	a4,.L46
 137:src/MemoryAllocator.cpp ****                         cur->size += cur->next->size;
 540              		.loc 1 137 56 discriminator 1
 541 02b8 83B60701 		ld	a3,16(a5)
 137:src/MemoryAllocator.cpp ****                         cur->size += cur->next->size;
 542              		.loc 1 137 49 discriminator 1
 543 02bc 3386D700 		add	a2,a5,a3
 137:src/MemoryAllocator.cpp ****                         cur->size += cur->next->size;
 544              		.loc 1 137 34 discriminator 1
 545 02c0 6304C704 		beq	a4,a2,.L58
 546              	.L46:
 143:src/MemoryAllocator.cpp ****                         cur = newFree->prev;
 547              		.loc 1 143 21 is_stmt 1
 143:src/MemoryAllocator.cpp ****                         cur = newFree->prev;
 548              		.loc 1 143 33 is_stmt 0
 549 02c4 83B78700 		ld	a5,8(a5)
 550              	.LVL45:
 143:src/MemoryAllocator.cpp ****                         cur = newFree->prev;
 551              		.loc 1 143 21
 552 02c8 638C0700 		beqz	a5,.L47
 144:src/MemoryAllocator.cpp ****                         if(cur->next && (char *)cur + cur->size == (char *)cur->next) {
 553              		.loc 1 144 25 is_stmt 1
 554              	.LVL46:
 145:src/MemoryAllocator.cpp ****                             cur->size += cur->next->size;
 555              		.loc 1 145 25
 145:src/MemoryAllocator.cpp ****                             cur->size += cur->next->size;
 556              		.loc 1 145 33 is_stmt 0
 557 02cc 03B70700 		ld	a4,0(a5)
 145:src/MemoryAllocator.cpp ****                             cur->size += cur->next->size;
 558              		.loc 1 145 25
 559 02d0 63080700 		beqz	a4,.L47
 145:src/MemoryAllocator.cpp ****                             cur->size += cur->next->size;
 560              		.loc 1 145 60 discriminator 1
 561 02d4 83B60701 		ld	a3,16(a5)
 145:src/MemoryAllocator.cpp ****                             cur->size += cur->next->size;
 562              		.loc 1 145 53 discriminator 1
 563 02d8 3386D700 		add	a2,a5,a3
 145:src/MemoryAllocator.cpp ****                             cur->size += cur->next->size;
 564              		.loc 1 145 38 discriminator 1
 565 02dc 6306C704 		beq	a4,a2,.L59
 566              	.LVL47:
 567              	.L47:
 151:src/MemoryAllocator.cpp ****                 } else if(!free->next) {
 568              		.loc 1 151 21 is_stmt 1
 151:src/MemoryAllocator.cpp ****                 } else if(!free->next) {
 569              		.loc 1 151 28 is_stmt 0
 570 02e0 13050000 		li	a0,0
 571              	.LVL48:
 572              	.L37:
 573              	.LBE26:
 574              	.LBE29:
GAS LISTING /tmp/ccHYyRJz.s 			page 16


 575              	.LBE32:
 576              	.LBE36:
 577              	.LBE40:
 578              	.LBE44:
 168:src/MemoryAllocator.cpp ****                 }
 169:src/MemoryAllocator.cpp ****             }
 170:src/MemoryAllocator.cpp ****         }
 171:src/MemoryAllocator.cpp ****     }
 172:src/MemoryAllocator.cpp **** 
 173:src/MemoryAllocator.cpp ****     return -1;
 174:src/MemoryAllocator.cpp **** }
 579              		.loc 1 174 1
 580 02e4 03348100 		ld	s0,8(sp)
 581              		.cfi_remember_state
 582              		.cfi_restore 8
 583              		.cfi_def_cfa 2, 16
 584 02e8 13010101 		addi	sp,sp,16
 585              		.cfi_def_cfa_offset 0
 586 02ec 67800000 		jr	ra
 587              	.LVL49:
 588              	.L57:
 589              		.cfi_restore_state
 590              	.LBB45:
 591              	.LBB41:
 592              	.LBB37:
 593              	.LBB33:
 594              	.LBB30:
 595              	.LBB27:
 124:src/MemoryAllocator.cpp ****                         newFree->next = free;
 596              		.loc 1 124 25 is_stmt 1
 124:src/MemoryAllocator.cpp ****                         newFree->next = free;
 597              		.loc 1 124 39 is_stmt 0
 598 02f0 23B40700 		sd	zero,8(a5)
 125:src/MemoryAllocator.cpp ****                         free->prev = newFree;
 599              		.loc 1 125 25 is_stmt 1
 125:src/MemoryAllocator.cpp ****                         free->prev = newFree;
 600              		.loc 1 125 39 is_stmt 0
 601 02f4 23B0E700 		sd	a4,0(a5)
 126:src/MemoryAllocator.cpp ****                         freeMemHead = newFree;
 602              		.loc 1 126 25 is_stmt 1
 126:src/MemoryAllocator.cpp ****                         freeMemHead = newFree;
 603              		.loc 1 126 36 is_stmt 0
 604 02f8 2334F700 		sd	a5,8(a4)
 127:src/MemoryAllocator.cpp ****                     } else {
 605              		.loc 1 127 25 is_stmt 1
 127:src/MemoryAllocator.cpp ****                     } else {
 606              		.loc 1 127 37 is_stmt 0
 607 02fc 17070000 		sd	a5,.LANCHOR0,a4
 607      2330F700 
 608              	.LVL50:
 609 0304 6FF0DFFA 		j	.L45
 610              	.LVL51:
 611              	.L58:
 138:src/MemoryAllocator.cpp ****                         cur->next = cur->next->next;
 612              		.loc 1 138 25 is_stmt 1
 138:src/MemoryAllocator.cpp ****                         cur->next = cur->next->next;
 613              		.loc 1 138 49 is_stmt 0
GAS LISTING /tmp/ccHYyRJz.s 			page 17


 614 0308 03360701 		ld	a2,16(a4)
 138:src/MemoryAllocator.cpp ****                         cur->next = cur->next->next;
 615              		.loc 1 138 35
 616 030c B386C600 		add	a3,a3,a2
 617 0310 23B8D700 		sd	a3,16(a5)
 139:src/MemoryAllocator.cpp ****                         if(cur->next) cur->next->prev = cur;
 618              		.loc 1 139 25 is_stmt 1
 139:src/MemoryAllocator.cpp ****                         if(cur->next) cur->next->prev = cur;
 619              		.loc 1 139 48 is_stmt 0
 620 0314 03370700 		ld	a4,0(a4)
 139:src/MemoryAllocator.cpp ****                         if(cur->next) cur->next->prev = cur;
 621              		.loc 1 139 35
 622 0318 23B0E700 		sd	a4,0(a5)
 140:src/MemoryAllocator.cpp ****                     }
 623              		.loc 1 140 25 is_stmt 1
 624 031c E30407FA 		beqz	a4,.L46
 140:src/MemoryAllocator.cpp ****                     }
 625              		.loc 1 140 39 discriminator 1
 140:src/MemoryAllocator.cpp ****                     }
 626              		.loc 1 140 55 is_stmt 0 discriminator 1
 627 0320 2334F700 		sd	a5,8(a4)
 628 0324 6FF01FFA 		j	.L46
 629              	.LVL52:
 630              	.L59:
 146:src/MemoryAllocator.cpp ****                             cur->next = cur->next->next;
 631              		.loc 1 146 29 is_stmt 1
 146:src/MemoryAllocator.cpp ****                             cur->next = cur->next->next;
 632              		.loc 1 146 53 is_stmt 0
 633 0328 03360701 		ld	a2,16(a4)
 146:src/MemoryAllocator.cpp ****                             cur->next = cur->next->next;
 634              		.loc 1 146 39
 635 032c B386C600 		add	a3,a3,a2
 636 0330 23B8D700 		sd	a3,16(a5)
 147:src/MemoryAllocator.cpp ****                             if(cur->next) cur->next->prev = cur;
 637              		.loc 1 147 29 is_stmt 1
 147:src/MemoryAllocator.cpp ****                             if(cur->next) cur->next->prev = cur;
 638              		.loc 1 147 52 is_stmt 0
 639 0334 03370700 		ld	a4,0(a4)
 147:src/MemoryAllocator.cpp ****                             if(cur->next) cur->next->prev = cur;
 640              		.loc 1 147 39
 641 0338 23B0E700 		sd	a4,0(a5)
 148:src/MemoryAllocator.cpp ****                         }
 642              		.loc 1 148 29 is_stmt 1
 643 033c E30207FA 		beqz	a4,.L47
 148:src/MemoryAllocator.cpp ****                         }
 644              		.loc 1 148 43 discriminator 1
 148:src/MemoryAllocator.cpp ****                         }
 645              		.loc 1 148 59 is_stmt 0 discriminator 1
 646 0340 2334F700 		sd	a5,8(a4)
 647 0344 6FF0DFF9 		j	.L47
 648              	.LVL53:
 649              	.L56:
 650              	.LBE27:
 651              	.LBB28:
 652              	.LBB25:
 653              	.LBB24:
 162:src/MemoryAllocator.cpp ****                             cur->next = cur->next->next;
GAS LISTING /tmp/ccHYyRJz.s 			page 18


 654              		.loc 1 162 29 is_stmt 1
 162:src/MemoryAllocator.cpp ****                             cur->next = cur->next->next;
 655              		.loc 1 162 53 is_stmt 0
 656 0348 03B60701 		ld	a2,16(a5)
 162:src/MemoryAllocator.cpp ****                             cur->next = cur->next->next;
 657              		.loc 1 162 39
 658 034c B386C600 		add	a3,a3,a2
 659 0350 2338D700 		sd	a3,16(a4)
 163:src/MemoryAllocator.cpp ****                             if (cur->next) cur->next->prev = cur;
 660              		.loc 1 163 29 is_stmt 1
 163:src/MemoryAllocator.cpp ****                             if (cur->next) cur->next->prev = cur;
 661              		.loc 1 163 52 is_stmt 0
 662 0354 83B70700 		ld	a5,0(a5)
 163:src/MemoryAllocator.cpp ****                             if (cur->next) cur->next->prev = cur;
 663              		.loc 1 163 39
 664 0358 2330F700 		sd	a5,0(a4)
 164:src/MemoryAllocator.cpp ****                         }
 665              		.loc 1 164 29 is_stmt 1
 666 035c E38807F2 		beqz	a5,.L49
 164:src/MemoryAllocator.cpp ****                         }
 667              		.loc 1 164 44 discriminator 1
 164:src/MemoryAllocator.cpp ****                         }
 668              		.loc 1 164 60 is_stmt 0 discriminator 1
 669 0360 23B4E700 		sd	a4,8(a5)
 670 0364 6FF09FF2 		j	.L49
 671              	.LVL54:
 672              	.L38:
 673              	.LBE24:
 674              	.LBE25:
 675              	.LBE28:
 676              	.LBE30:
 677              	.LBE33:
 678              	.LBE37:
 679              	.LBE41:
  97:src/MemoryAllocator.cpp ****         if(used == adress) {
 680              		.loc 1 97 5 is_stmt 1 discriminator 2
  97:src/MemoryAllocator.cpp ****         if(used == adress) {
 681              		.loc 1 97 52 is_stmt 0 discriminator 2
 682 0368 83B70700 		ld	a5,0(a5)
 683              	.LVL55:
 684              	.L50:
  97:src/MemoryAllocator.cpp ****         if(used == adress) {
 685              		.loc 1 97 41 is_stmt 1 discriminator 1
 686 036c 63860704 		beqz	a5,.L52
 687              	.LBE45:
  98:src/MemoryAllocator.cpp ****             //novi slobodan segment
 688              		.loc 1 98 9
 689              	.LBB46:
 690              	.LBB42:
 691 0370 E39CA7FE 		bne	a5,a0,.L38
 692              	.LBB38:
 100:src/MemoryAllocator.cpp **** 
 693              		.loc 1 100 13
 694              	.LVL56:
 103:src/MemoryAllocator.cpp ****                 usedMemHead = nullptr;
 695              		.loc 1 103 13
 103:src/MemoryAllocator.cpp ****                 usedMemHead = nullptr;
GAS LISTING /tmp/ccHYyRJz.s 			page 19


 696              		.loc 1 103 24 is_stmt 0
 697 0374 03B78700 		ld	a4,8(a5)
 103:src/MemoryAllocator.cpp ****                 usedMemHead = nullptr;
 698              		.loc 1 103 13
 699 0378 E30407EA 		beqz	a4,.L60
 700              	.L39:
 105:src/MemoryAllocator.cpp ****                 usedMemHead = used->next;
 701              		.loc 1 105 20 is_stmt 1
 702 037c E30C07EA 		beqz	a4,.L61
 109:src/MemoryAllocator.cpp ****                 used->prev->next = nullptr;
 703              		.loc 1 109 20
 109:src/MemoryAllocator.cpp ****                 used->prev->next = nullptr;
 704              		.loc 1 109 30 is_stmt 0
 705 0380 83B60700 		ld	a3,0(a5)
 109:src/MemoryAllocator.cpp ****                 used->prev->next = nullptr;
 706              		.loc 1 109 20
 707 0384 E38406EC 		beqz	a3,.L62
 113:src/MemoryAllocator.cpp ****                 used->next->prev = used->prev;
 708              		.loc 1 113 17 is_stmt 1
 113:src/MemoryAllocator.cpp ****                 used->next->prev = used->prev;
 709              		.loc 1 113 34 is_stmt 0
 710 0388 2330D700 		sd	a3,0(a4)
 114:src/MemoryAllocator.cpp ****                 used->prev = nullptr;
 711              		.loc 1 114 17 is_stmt 1
 114:src/MemoryAllocator.cpp ****                 used->prev = nullptr;
 712              		.loc 1 114 23 is_stmt 0
 713 038c 03B70700 		ld	a4,0(a5)
 114:src/MemoryAllocator.cpp ****                 used->prev = nullptr;
 714              		.loc 1 114 42
 715 0390 83B68700 		ld	a3,8(a5)
 114:src/MemoryAllocator.cpp ****                 used->prev = nullptr;
 716              		.loc 1 114 34
 717 0394 2334D700 		sd	a3,8(a4)
 115:src/MemoryAllocator.cpp ****                 used->next = nullptr;
 718              		.loc 1 115 17 is_stmt 1
 115:src/MemoryAllocator.cpp ****                 used->next = nullptr;
 719              		.loc 1 115 28 is_stmt 0
 720 0398 23B40700 		sd	zero,8(a5)
 116:src/MemoryAllocator.cpp ****             }
 721              		.loc 1 116 17 is_stmt 1
 116:src/MemoryAllocator.cpp ****             }
 722              		.loc 1 116 28 is_stmt 0
 723 039c 23B00700 		sd	zero,0(a5)
 724              	.L40:
 120:src/MemoryAllocator.cpp ****                 if(free > newFree) {
 725              		.loc 1 120 13 is_stmt 1
 726              	.LBB34:
 120:src/MemoryAllocator.cpp ****                 if(free > newFree) {
 727              		.loc 1 120 29 is_stmt 0
 728 03a0 17060000 		ld	a2,.LANCHOR0
 728      03360600 
 729              	.LVL57:
 730 03a8 13070600 		mv	a4,a2
 731 03ac 6FF01FEB 		j	.L48
 732              	.LVL58:
 733              	.L51:
 734              	.LBE34:
GAS LISTING /tmp/ccHYyRJz.s 			page 20


 735              	.LBE38:
 736              	.LBE42:
 737              	.LBE46:
  94:src/MemoryAllocator.cpp ****     adress = (char *)adress - sizeof(MemoryAllocator::MemSegment);
 738              		.loc 1 94 25
 739 03b0 1305F0FF 		li	a0,-1
 740              	.LVL59:
 741 03b4 6FF01FF3 		j	.L37
 742              	.LVL60:
 743              	.L52:
 173:src/MemoryAllocator.cpp **** }
 744              		.loc 1 173 13
 745 03b8 1305F0FF 		li	a0,-1
 746              	.LVL61:
 747 03bc 6FF09FF2 		j	.L37
 748              		.cfi_endproc
 749              	.LFE2:
 751              		.globl	_ZN15MemoryAllocator11initializedE
 752              		.globl	_ZN15MemoryAllocator11usedMemHeadE
 753              		.globl	_ZN15MemoryAllocator11freeMemHeadE
 754              		.bss
 755              		.align	3
 756              		.set	.LANCHOR0,. + 0
 759              	_ZN15MemoryAllocator11freeMemHeadE:
 760 0000 00000000 		.zero	8
 760      00000000 
 763              	_ZN15MemoryAllocator11usedMemHeadE:
 764 0008 00000000 		.zero	8
 764      00000000 
 767              	_ZN15MemoryAllocator11initializedE:
 768 0010 00       		.zero	1
 769              		.text
 770              	.Letext0:
 771              		.file 2 "src/../h/../lib/hw.h"
 772              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccHYyRJz.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccHYyRJz.s:9      .text:0000000000000000 _ZN15MemoryAllocator10initializeEv
     /tmp/ccHYyRJz.s:13     .text:0000000000000000 .L0 
     /tmp/ccHYyRJz.s:14     .text:0000000000000000 .L0 
     /tmp/ccHYyRJz.s:15     .text:0000000000000004 .L0 
     /tmp/ccHYyRJz.s:17     .text:0000000000000008 .L0 
     /tmp/ccHYyRJz.s:19     .text:000000000000000c .L0 
     /tmp/ccHYyRJz.s:21     .text:000000000000000c .L0 
     /tmp/ccHYyRJz.s:22     .text:000000000000000c .L0 
     /tmp/ccHYyRJz.s:27     .text:0000000000000024 .L0 
     /tmp/ccHYyRJz.s:28     .text:0000000000000024 .L0 
     /tmp/ccHYyRJz.s:30     .text:0000000000000028 .L0 
     /tmp/ccHYyRJz.s:31     .text:0000000000000028 .L0 
     /tmp/ccHYyRJz.s:33     .text:000000000000002c .L0 
     /tmp/ccHYyRJz.s:35     .text:0000000000000030 .L0 
     /tmp/ccHYyRJz.s:36     .text:0000000000000030 .L0 
     /tmp/ccHYyRJz.s:41     .text:0000000000000044 .L0 
     /tmp/ccHYyRJz.s:43     .text:0000000000000048 .L0 
     /tmp/ccHYyRJz.s:44     .text:0000000000000048 .L0 
     /tmp/ccHYyRJz.s:46     .text:000000000000004c .L0 
     /tmp/ccHYyRJz.s:47     .text:0000000000000050 .L0 
     /tmp/ccHYyRJz.s:48     .text:0000000000000050 .L0 
     /tmp/ccHYyRJz.s:50     .text:0000000000000054 .L0 
     /tmp/ccHYyRJz.s:52     .text:0000000000000058 .L0 
     /tmp/ccHYyRJz.s:58     .text:0000000000000058 _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccHYyRJz.s:61     .text:0000000000000058 .L0 
     /tmp/ccHYyRJz.s:63     .text:0000000000000058 .L0 
     /tmp/ccHYyRJz.s:64     .text:0000000000000058 .L0 
     /tmp/ccHYyRJz.s:66     .text:000000000000005c .L0 
     /tmp/ccHYyRJz.s:67     .text:0000000000000060 .L0 
     /tmp/ccHYyRJz.s:71     .text:000000000000006c .L0 
     /tmp/ccHYyRJz.s:72     .text:000000000000006c .L0 
     /tmp/ccHYyRJz.s:73     .text:000000000000006c .L0 
     /tmp/ccHYyRJz.s:75     .text:0000000000000070 .L0 
     /tmp/ccHYyRJz.s:77     .text:0000000000000070 .L0 
     /tmp/ccHYyRJz.s:78     .text:0000000000000070 .L0 
     /tmp/ccHYyRJz.s:81     .text:0000000000000074 .L0 
     /tmp/ccHYyRJz.s:82     .text:0000000000000074 .L0 
     /tmp/ccHYyRJz.s:84     .text:000000000000007c .L0 
     /tmp/ccHYyRJz.s:88     .text:0000000000000080 .L0 
     /tmp/ccHYyRJz.s:89     .text:0000000000000080 .L0 
     /tmp/ccHYyRJz.s:95     .text:000000000000008c .L0 
     /tmp/ccHYyRJz.s:100    .text:0000000000000090 .L0 
     /tmp/ccHYyRJz.s:101    .text:0000000000000090 .L0 
     /tmp/ccHYyRJz.s:103    .text:0000000000000094 .L0 
     /tmp/ccHYyRJz.s:106    .text:0000000000000098 .L0 
     /tmp/ccHYyRJz.s:107    .text:0000000000000098 .L0 
     /tmp/ccHYyRJz.s:110    .text:000000000000009c .L0 
     /tmp/ccHYyRJz.s:115    .text:00000000000000a0 .L0 
     /tmp/ccHYyRJz.s:116    .text:00000000000000a0 .L0 
     /tmp/ccHYyRJz.s:119    .text:00000000000000a8 .L0 
     /tmp/ccHYyRJz.s:120    .text:00000000000000a8 .L0 
     /tmp/ccHYyRJz.s:129    .text:00000000000000b8 .L0 
     /tmp/ccHYyRJz.s:130    .text:00000000000000b8 .L0 
     /tmp/ccHYyRJz.s:131    .text:00000000000000b8 .L0 
     /tmp/ccHYyRJz.s:132    .text:00000000000000b8 .L0 
GAS LISTING /tmp/ccHYyRJz.s 			page 22


     /tmp/ccHYyRJz.s:135    .text:00000000000000bc .L0 
     /tmp/ccHYyRJz.s:136    .text:00000000000000bc .L0 
     /tmp/ccHYyRJz.s:139    .text:00000000000000c0 .L0 
     /tmp/ccHYyRJz.s:141    .text:00000000000000c4 .L0 
     /tmp/ccHYyRJz.s:144    .text:00000000000000c8 .L0 
     /tmp/ccHYyRJz.s:145    .text:00000000000000c8 .L0 
     /tmp/ccHYyRJz.s:148    .text:00000000000000cc .L0 
     /tmp/ccHYyRJz.s:149    .text:00000000000000cc .L0 
     /tmp/ccHYyRJz.s:152    .text:00000000000000d0 .L0 
     /tmp/ccHYyRJz.s:155    .text:00000000000000d4 .L0 
     /tmp/ccHYyRJz.s:156    .text:00000000000000d4 .L0 
     /tmp/ccHYyRJz.s:158    .text:00000000000000d8 .L0 
     /tmp/ccHYyRJz.s:159    .text:00000000000000d8 .L0 
     /tmp/ccHYyRJz.s:161    .text:00000000000000dc .L0 
     /tmp/ccHYyRJz.s:163    .text:00000000000000e0 .L0 
     /tmp/ccHYyRJz.s:164    .text:00000000000000e0 .L0 
     /tmp/ccHYyRJz.s:167    .text:00000000000000e4 .L0 
     /tmp/ccHYyRJz.s:168    .text:00000000000000e4 .L0 
     /tmp/ccHYyRJz.s:170    .text:00000000000000e8 .L0 
     /tmp/ccHYyRJz.s:172    .text:00000000000000ec .L0 
     /tmp/ccHYyRJz.s:173    .text:00000000000000ec .L0 
     /tmp/ccHYyRJz.s:177    .text:00000000000000f0 .L0 
     /tmp/ccHYyRJz.s:178    .text:00000000000000f0 .L0 
     /tmp/ccHYyRJz.s:181    .text:00000000000000f4 .L0 
     /tmp/ccHYyRJz.s:182    .text:00000000000000f4 .L0 
     /tmp/ccHYyRJz.s:185    .text:00000000000000fc .L0 
     /tmp/ccHYyRJz.s:188    .text:0000000000000100 .L0 
     /tmp/ccHYyRJz.s:195    .text:0000000000000108 .L0 
     /tmp/ccHYyRJz.s:196    .text:0000000000000108 .L0 
     /tmp/ccHYyRJz.s:198    .text:000000000000010c .L0 
     /tmp/ccHYyRJz.s:202    .text:0000000000000118 .L0 
     /tmp/ccHYyRJz.s:205    .text:000000000000011c .L0 
     /tmp/ccHYyRJz.s:207    .text:0000000000000120 .L0 
     /tmp/ccHYyRJz.s:209    .text:0000000000000124 .L0 
     /tmp/ccHYyRJz.s:210    .text:0000000000000124 .L0 
     /tmp/ccHYyRJz.s:212    .text:0000000000000128 .L0 
     /tmp/ccHYyRJz.s:213    .text:0000000000000128 .L0 
     /tmp/ccHYyRJz.s:216    .text:000000000000012c .L0 
     /tmp/ccHYyRJz.s:218    .text:0000000000000130 .L0 
     /tmp/ccHYyRJz.s:223    .text:0000000000000138 .L0 
     /tmp/ccHYyRJz.s:225    .text:000000000000013c .L0 
     /tmp/ccHYyRJz.s:226    .text:000000000000013c .L0 
     /tmp/ccHYyRJz.s:232    .text:0000000000000148 .L0 
     /tmp/ccHYyRJz.s:233    .text:0000000000000148 .L0 
     /tmp/ccHYyRJz.s:236    .text:0000000000000150 .L0 
     /tmp/ccHYyRJz.s:237    .text:0000000000000150 .L0 
     /tmp/ccHYyRJz.s:243    .text:0000000000000158 .L0 
     /tmp/ccHYyRJz.s:244    .text:0000000000000158 .L0 
     /tmp/ccHYyRJz.s:250    .text:0000000000000160 .L0 
     /tmp/ccHYyRJz.s:251    .text:0000000000000160 .L0 
     /tmp/ccHYyRJz.s:254    .text:000000000000016c .L0 
     /tmp/ccHYyRJz.s:255    .text:000000000000016c .L0 
     /tmp/ccHYyRJz.s:257    .text:0000000000000170 .L0 
     /tmp/ccHYyRJz.s:258    .text:0000000000000170 .L0 
     /tmp/ccHYyRJz.s:260    .text:0000000000000174 .L0 
     /tmp/ccHYyRJz.s:264    .text:0000000000000178 .L0 
     /tmp/ccHYyRJz.s:265    .text:0000000000000178 .L0 
GAS LISTING /tmp/ccHYyRJz.s 			page 23


     /tmp/ccHYyRJz.s:272    .text:000000000000017c .L0 
     /tmp/ccHYyRJz.s:273    .text:0000000000000180 .L0 
     /tmp/ccHYyRJz.s:274    .text:0000000000000180 .L0 
     /tmp/ccHYyRJz.s:276    .text:0000000000000184 .L0 
     /tmp/ccHYyRJz.s:277    .text:0000000000000184 .L0 
     /tmp/ccHYyRJz.s:279    .text:0000000000000188 .L0 
     /tmp/ccHYyRJz.s:282    .text:000000000000018c .L0 
     /tmp/ccHYyRJz.s:286    .text:0000000000000190 .L0 
     /tmp/ccHYyRJz.s:293    .text:0000000000000190 .L0 
     /tmp/ccHYyRJz.s:295    .text:0000000000000194 .L0 
     /tmp/ccHYyRJz.s:299    .text:0000000000000198 .L0 
     /tmp/ccHYyRJz.s:301    .text:000000000000019c .L0 
     /tmp/ccHYyRJz.s:302    .text:000000000000019c .L0 
     /tmp/ccHYyRJz.s:304    .text:00000000000001a0 .L0 
     /tmp/ccHYyRJz.s:306    .text:00000000000001a4 .L0 
     /tmp/ccHYyRJz.s:308    .text:00000000000001a8 .L0 
     /tmp/ccHYyRJz.s:309    .text:00000000000001a8 .L0 
     /tmp/ccHYyRJz.s:311    .text:00000000000001ac .L0 
     /tmp/ccHYyRJz.s:312    .text:00000000000001ac .L0 
     /tmp/ccHYyRJz.s:314    .text:00000000000001b0 .L0 
     /tmp/ccHYyRJz.s:315    .text:00000000000001b0 .L0 
     /tmp/ccHYyRJz.s:317    .text:00000000000001b4 .L0 
     /tmp/ccHYyRJz.s:320    .text:00000000000001b8 .L0 
     /tmp/ccHYyRJz.s:322    .text:00000000000001bc .L0 
     /tmp/ccHYyRJz.s:323    .text:00000000000001bc .L0 
     /tmp/ccHYyRJz.s:325    .text:00000000000001c0 .L0 
     /tmp/ccHYyRJz.s:327    .text:00000000000001c4 .L0 
     /tmp/ccHYyRJz.s:328    .text:00000000000001c4 .L0 
     /tmp/ccHYyRJz.s:330    .text:00000000000001c8 .L0 
     /tmp/ccHYyRJz.s:332    .text:00000000000001cc .L0 
     /tmp/ccHYyRJz.s:333    .text:00000000000001cc .L0 
     /tmp/ccHYyRJz.s:336    .text:00000000000001d0 .L0 
     /tmp/ccHYyRJz.s:337    .text:00000000000001d0 .L0 
     /tmp/ccHYyRJz.s:340    .text:00000000000001d4 .L0 
     /tmp/ccHYyRJz.s:342    .text:00000000000001d8 .L0 
     /tmp/ccHYyRJz.s:343    .text:00000000000001d8 .L0 
     /tmp/ccHYyRJz.s:348    .text:00000000000001e0 .L0 
     /tmp/ccHYyRJz.s:349    .text:00000000000001e0 .L0 
     /tmp/ccHYyRJz.s:351    .text:00000000000001e4 .L0 
     /tmp/ccHYyRJz.s:352    .text:00000000000001e4 .L0 
     /tmp/ccHYyRJz.s:354    .text:00000000000001e8 .L0 
     /tmp/ccHYyRJz.s:355    .text:00000000000001e8 .L0 
     /tmp/ccHYyRJz.s:357    .text:00000000000001ec .L0 
     /tmp/ccHYyRJz.s:358    .text:00000000000001ec .L0 
     /tmp/ccHYyRJz.s:363    .text:00000000000001f8 .L0 
     /tmp/ccHYyRJz.s:364    .text:00000000000001f8 .L0 
     /tmp/ccHYyRJz.s:365    .text:00000000000001f8 .L0 
     /tmp/ccHYyRJz.s:366    .text:00000000000001f8 .L0 
     /tmp/ccHYyRJz.s:373    .text:00000000000001f8 .L0 
     /tmp/ccHYyRJz.s:376    .text:00000000000001fc .L0 
     /tmp/ccHYyRJz.s:377    .text:0000000000000200 .L0 
     /tmp/ccHYyRJz.s:383    .text:0000000000000200 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccHYyRJz.s:386    .text:0000000000000200 .L0 
     /tmp/ccHYyRJz.s:388    .text:0000000000000200 .L0 
     /tmp/ccHYyRJz.s:389    .text:0000000000000204 .L0 
     /tmp/ccHYyRJz.s:391    .text:0000000000000208 .L0 
     /tmp/ccHYyRJz.s:393    .text:000000000000020c .L0 
GAS LISTING /tmp/ccHYyRJz.s 			page 24


     /tmp/ccHYyRJz.s:395    .text:000000000000020c .L0 
     /tmp/ccHYyRJz.s:397    .text:0000000000000210 .L0 
     /tmp/ccHYyRJz.s:398    .text:0000000000000210 .L0 
     /tmp/ccHYyRJz.s:402    .text:0000000000000214 .L0 
     /tmp/ccHYyRJz.s:403    .text:0000000000000214 .L0 
     /tmp/ccHYyRJz.s:411    .text:0000000000000220 .L0 
     /tmp/ccHYyRJz.s:413    .text:0000000000000224 .L0 
     /tmp/ccHYyRJz.s:415    .text:0000000000000228 .L0 
     /tmp/ccHYyRJz.s:416    .text:0000000000000228 .L0 
     /tmp/ccHYyRJz.s:420    .text:0000000000000234 .L0 
     /tmp/ccHYyRJz.s:421    .text:0000000000000234 .L0 
     /tmp/ccHYyRJz.s:423    .text:0000000000000238 .L0 
     /tmp/ccHYyRJz.s:425    .text:0000000000000240 .L0 
     /tmp/ccHYyRJz.s:426    .text:0000000000000240 .L0 
     /tmp/ccHYyRJz.s:428    .text:0000000000000244 .L0 
     /tmp/ccHYyRJz.s:429    .text:0000000000000244 .L0 
     /tmp/ccHYyRJz.s:433    .text:000000000000024c .L0 
     /tmp/ccHYyRJz.s:434    .text:000000000000024c .L0 
     /tmp/ccHYyRJz.s:436    .text:0000000000000250 .L0 
     /tmp/ccHYyRJz.s:437    .text:0000000000000250 .L0 
     /tmp/ccHYyRJz.s:443    .text:0000000000000258 .L0 
     /tmp/ccHYyRJz.s:447    .text:000000000000025c .L0 
     /tmp/ccHYyRJz.s:458    .text:0000000000000260 .L0 
     /tmp/ccHYyRJz.s:471    .text:0000000000000264 .L0 
     /tmp/ccHYyRJz.s:472    .text:0000000000000264 .L0 
     /tmp/ccHYyRJz.s:474    .text:0000000000000268 .L0 
     /tmp/ccHYyRJz.s:477    .text:000000000000026c .L0 
     /tmp/ccHYyRJz.s:478    .text:000000000000026c .L0 
     /tmp/ccHYyRJz.s:480    .text:0000000000000270 .L0 
     /tmp/ccHYyRJz.s:481    .text:0000000000000270 .L0 
     /tmp/ccHYyRJz.s:483    .text:0000000000000274 .L0 
     /tmp/ccHYyRJz.s:484    .text:0000000000000274 .L0 
     /tmp/ccHYyRJz.s:487    .text:0000000000000278 .L0 
     /tmp/ccHYyRJz.s:489    .text:0000000000000278 .L0 
     /tmp/ccHYyRJz.s:490    .text:0000000000000278 .L0 
     /tmp/ccHYyRJz.s:491    .text:0000000000000278 .L0 
     /tmp/ccHYyRJz.s:494    .text:000000000000027c .L0 
     /tmp/ccHYyRJz.s:496    .text:0000000000000280 .L0 
     /tmp/ccHYyRJz.s:498    .text:0000000000000284 .L0 
     /tmp/ccHYyRJz.s:500    .text:0000000000000288 .L0 
     /tmp/ccHYyRJz.s:504    .text:000000000000028c .L0 
     /tmp/ccHYyRJz.s:505    .text:000000000000028c .L0 
     /tmp/ccHYyRJz.s:514    .text:0000000000000294 .L0 
     /tmp/ccHYyRJz.s:516    .text:0000000000000298 .L0 
     /tmp/ccHYyRJz.s:517    .text:0000000000000298 .L0 
     /tmp/ccHYyRJz.s:519    .text:000000000000029c .L0 
     /tmp/ccHYyRJz.s:521    .text:00000000000002a0 .L0 
     /tmp/ccHYyRJz.s:522    .text:00000000000002a0 .L0 
     /tmp/ccHYyRJz.s:524    .text:00000000000002a4 .L0 
     /tmp/ccHYyRJz.s:525    .text:00000000000002a4 .L0 
     /tmp/ccHYyRJz.s:527    .text:00000000000002a8 .L0 
     /tmp/ccHYyRJz.s:528    .text:00000000000002a8 .L0 
     /tmp/ccHYyRJz.s:531    .text:00000000000002ac .L0 
     /tmp/ccHYyRJz.s:535    .text:00000000000002b0 .L0 
     /tmp/ccHYyRJz.s:536    .text:00000000000002b0 .L0 
     /tmp/ccHYyRJz.s:537    .text:00000000000002b0 .L0 
     /tmp/ccHYyRJz.s:539    .text:00000000000002b4 .L0 
GAS LISTING /tmp/ccHYyRJz.s 			page 25


     /tmp/ccHYyRJz.s:541    .text:00000000000002b8 .L0 
     /tmp/ccHYyRJz.s:543    .text:00000000000002bc .L0 
     /tmp/ccHYyRJz.s:545    .text:00000000000002c0 .L0 
     /tmp/ccHYyRJz.s:548    .text:00000000000002c4 .L0 
     /tmp/ccHYyRJz.s:549    .text:00000000000002c4 .L0 
     /tmp/ccHYyRJz.s:552    .text:00000000000002c8 .L0 
     /tmp/ccHYyRJz.s:555    .text:00000000000002cc .L0 
     /tmp/ccHYyRJz.s:556    .text:00000000000002cc .L0 
     /tmp/ccHYyRJz.s:557    .text:00000000000002cc .L0 
     /tmp/ccHYyRJz.s:559    .text:00000000000002d0 .L0 
     /tmp/ccHYyRJz.s:561    .text:00000000000002d4 .L0 
     /tmp/ccHYyRJz.s:563    .text:00000000000002d8 .L0 
     /tmp/ccHYyRJz.s:565    .text:00000000000002dc .L0 
     /tmp/ccHYyRJz.s:569    .text:00000000000002e0 .L0 
     /tmp/ccHYyRJz.s:570    .text:00000000000002e0 .L0 
     /tmp/ccHYyRJz.s:580    .text:00000000000002e4 .L0 
     /tmp/ccHYyRJz.s:581    .text:00000000000002e8 .L0 
     /tmp/ccHYyRJz.s:582    .text:00000000000002e8 .L0 
     /tmp/ccHYyRJz.s:583    .text:00000000000002e8 .L0 
     /tmp/ccHYyRJz.s:585    .text:00000000000002ec .L0 
     /tmp/ccHYyRJz.s:589    .text:00000000000002f0 .L0 
     /tmp/ccHYyRJz.s:597    .text:00000000000002f0 .L0 
     /tmp/ccHYyRJz.s:598    .text:00000000000002f0 .L0 
     /tmp/ccHYyRJz.s:600    .text:00000000000002f4 .L0 
     /tmp/ccHYyRJz.s:601    .text:00000000000002f4 .L0 
     /tmp/ccHYyRJz.s:603    .text:00000000000002f8 .L0 
     /tmp/ccHYyRJz.s:604    .text:00000000000002f8 .L0 
     /tmp/ccHYyRJz.s:606    .text:00000000000002fc .L0 
     /tmp/ccHYyRJz.s:607    .text:00000000000002fc .L0 
     /tmp/ccHYyRJz.s:613    .text:0000000000000308 .L0 
     /tmp/ccHYyRJz.s:614    .text:0000000000000308 .L0 
     /tmp/ccHYyRJz.s:616    .text:000000000000030c .L0 
     /tmp/ccHYyRJz.s:619    .text:0000000000000314 .L0 
     /tmp/ccHYyRJz.s:620    .text:0000000000000314 .L0 
     /tmp/ccHYyRJz.s:622    .text:0000000000000318 .L0 
     /tmp/ccHYyRJz.s:624    .text:000000000000031c .L0 
     /tmp/ccHYyRJz.s:626    .text:0000000000000320 .L0 
     /tmp/ccHYyRJz.s:627    .text:0000000000000320 .L0 
     /tmp/ccHYyRJz.s:632    .text:0000000000000328 .L0 
     /tmp/ccHYyRJz.s:633    .text:0000000000000328 .L0 
     /tmp/ccHYyRJz.s:635    .text:000000000000032c .L0 
     /tmp/ccHYyRJz.s:638    .text:0000000000000334 .L0 
     /tmp/ccHYyRJz.s:639    .text:0000000000000334 .L0 
     /tmp/ccHYyRJz.s:641    .text:0000000000000338 .L0 
     /tmp/ccHYyRJz.s:643    .text:000000000000033c .L0 
     /tmp/ccHYyRJz.s:645    .text:0000000000000340 .L0 
     /tmp/ccHYyRJz.s:646    .text:0000000000000340 .L0 
     /tmp/ccHYyRJz.s:655    .text:0000000000000348 .L0 
     /tmp/ccHYyRJz.s:656    .text:0000000000000348 .L0 
     /tmp/ccHYyRJz.s:658    .text:000000000000034c .L0 
     /tmp/ccHYyRJz.s:661    .text:0000000000000354 .L0 
     /tmp/ccHYyRJz.s:662    .text:0000000000000354 .L0 
     /tmp/ccHYyRJz.s:664    .text:0000000000000358 .L0 
     /tmp/ccHYyRJz.s:666    .text:000000000000035c .L0 
     /tmp/ccHYyRJz.s:668    .text:0000000000000360 .L0 
     /tmp/ccHYyRJz.s:669    .text:0000000000000360 .L0 
     /tmp/ccHYyRJz.s:681    .text:0000000000000368 .L0 
GAS LISTING /tmp/ccHYyRJz.s 			page 26


     /tmp/ccHYyRJz.s:682    .text:0000000000000368 .L0 
     /tmp/ccHYyRJz.s:686    .text:000000000000036c .L0 
     /tmp/ccHYyRJz.s:691    .text:0000000000000370 .L0 
     /tmp/ccHYyRJz.s:695    .text:0000000000000374 .L0 
     /tmp/ccHYyRJz.s:696    .text:0000000000000374 .L0 
     /tmp/ccHYyRJz.s:697    .text:0000000000000374 .L0 
     /tmp/ccHYyRJz.s:699    .text:0000000000000378 .L0 
     /tmp/ccHYyRJz.s:702    .text:000000000000037c .L0 
     /tmp/ccHYyRJz.s:704    .text:0000000000000380 .L0 
     /tmp/ccHYyRJz.s:705    .text:0000000000000380 .L0 
     /tmp/ccHYyRJz.s:707    .text:0000000000000384 .L0 
     /tmp/ccHYyRJz.s:709    .text:0000000000000388 .L0 
     /tmp/ccHYyRJz.s:710    .text:0000000000000388 .L0 
     /tmp/ccHYyRJz.s:712    .text:000000000000038c .L0 
     /tmp/ccHYyRJz.s:713    .text:000000000000038c .L0 
     /tmp/ccHYyRJz.s:715    .text:0000000000000390 .L0 
     /tmp/ccHYyRJz.s:717    .text:0000000000000394 .L0 
     /tmp/ccHYyRJz.s:719    .text:0000000000000398 .L0 
     /tmp/ccHYyRJz.s:720    .text:0000000000000398 .L0 
     /tmp/ccHYyRJz.s:722    .text:000000000000039c .L0 
     /tmp/ccHYyRJz.s:723    .text:000000000000039c .L0 
     /tmp/ccHYyRJz.s:727    .text:00000000000003a0 .L0 
     /tmp/ccHYyRJz.s:728    .text:00000000000003a0 .L0 
     /tmp/ccHYyRJz.s:739    .text:00000000000003b0 .L0 
     /tmp/ccHYyRJz.s:745    .text:00000000000003b8 .L0 
     /tmp/ccHYyRJz.s:748    .text:00000000000003c0 .L0 
     /tmp/ccHYyRJz.s:767    .bss:0000000000000010 _ZN15MemoryAllocator11initializedE
     /tmp/ccHYyRJz.s:763    .bss:0000000000000008 _ZN15MemoryAllocator11usedMemHeadE
     /tmp/ccHYyRJz.s:759    .bss:0000000000000000 _ZN15MemoryAllocator11freeMemHeadE
     /tmp/ccHYyRJz.s:756    .bss:0000000000000000 .LANCHOR0
     /tmp/ccHYyRJz.s:773    .text:00000000000003c0 .L0 
     /tmp/ccHYyRJz.s:22     .text:000000000000000c .L0 
     /tmp/ccHYyRJz.s:24     .text:0000000000000018 .L0 
     /tmp/ccHYyRJz.s:36     .text:0000000000000030 .L0 
     /tmp/ccHYyRJz.s:82     .text:0000000000000074 .L0 
     /tmp/ccHYyRJz.s:89     .text:0000000000000080 .L0 
     /tmp/ccHYyRJz.s:121    .text:00000000000000ac .L0 
     /tmp/ccHYyRJz.s:182    .text:00000000000000f4 .L0 
     /tmp/ccHYyRJz.s:198    .text:000000000000010c .L0 
     /tmp/ccHYyRJz.s:226    .text:000000000000013c .L0 
     /tmp/ccHYyRJz.s:233    .text:0000000000000148 .L0 
     /tmp/ccHYyRJz.s:251    .text:0000000000000160 .L0 
     /tmp/ccHYyRJz.s:358    .text:00000000000001ec .L0 
     /tmp/ccHYyRJz.s:403    .text:0000000000000214 .L0 
     /tmp/ccHYyRJz.s:416    .text:0000000000000228 .L0 
     /tmp/ccHYyRJz.s:423    .text:0000000000000238 .L0 
     /tmp/ccHYyRJz.s:607    .text:00000000000002fc .L0 
     /tmp/ccHYyRJz.s:728    .text:00000000000003a0 .L0 
     /tmp/ccHYyRJz.s:362    .text:00000000000001f8 .L20
     /tmp/ccHYyRJz.s:112    .text:00000000000000a0 .L27
     /tmp/ccHYyRJz.s:267    .text:000000000000017c .L3
     /tmp/ccHYyRJz.s:124    .text:00000000000000b8 .L28
     /tmp/ccHYyRJz.s:93     .text:000000000000008c .L19
     /tmp/ccHYyRJz.s:85     .text:0000000000000080 .L5
     /tmp/ccHYyRJz.s:200    .text:0000000000000118 .L7
     /tmp/ccHYyRJz.s:191    .text:0000000000000108 .L29
     /tmp/ccHYyRJz.s:165    .text:00000000000000e4 .L9
GAS LISTING /tmp/ccHYyRJz.s 			page 27


     /tmp/ccHYyRJz.s:175    .text:00000000000000f0 .L10
     /tmp/ccHYyRJz.s:247    .text:0000000000000160 .L30
     /tmp/ccHYyRJz.s:297    .text:0000000000000198 .L14
     /tmp/ccHYyRJz.s:142    .text:00000000000000c8 .L8
     /tmp/ccHYyRJz.s:221    .text:0000000000000138 .L31
     /tmp/ccHYyRJz.s:230    .text:0000000000000148 .L32
     /tmp/ccHYyRJz.s:241    .text:0000000000000158 .L33
     /tmp/ccHYyRJz.s:203    .text:000000000000011c .L11
     /tmp/ccHYyRJz.s:318    .text:00000000000001b8 .L34
     /tmp/ccHYyRJz.s:261    .text:0000000000000178 .L15
     /tmp/ccHYyRJz.s:285    .text:0000000000000190 .L16
     /tmp/ccHYyRJz.s:346    .text:00000000000001e0 .L35
     /tmp/ccHYyRJz.s:334    .text:00000000000001d0 .L18
     /tmp/ccHYyRJz.s:733    .text:00000000000003b0 .L51
     /tmp/ccHYyRJz.s:684    .text:000000000000036c .L50
     /tmp/ccHYyRJz.s:700    .text:000000000000037c .L39
     /tmp/ccHYyRJz.s:724    .text:00000000000003a0 .L40
     /tmp/ccHYyRJz.s:672    .text:0000000000000368 .L38
     /tmp/ccHYyRJz.s:509    .text:0000000000000294 .L55
     /tmp/ccHYyRJz.s:440    .text:0000000000000258 .L53
     /tmp/ccHYyRJz.s:501    .text:000000000000028c .L49
     /tmp/ccHYyRJz.s:649    .text:0000000000000348 .L56
     /tmp/ccHYyRJz.s:572    .text:00000000000002e4 .L37
     /tmp/ccHYyRJz.s:588    .text:00000000000002f0 .L57
     /tmp/ccHYyRJz.s:546    .text:00000000000002c4 .L46
     /tmp/ccHYyRJz.s:611    .text:0000000000000308 .L58
     /tmp/ccHYyRJz.s:567    .text:00000000000002e0 .L47
     /tmp/ccHYyRJz.s:630    .text:0000000000000328 .L59
     /tmp/ccHYyRJz.s:532    .text:00000000000002b0 .L45
     /tmp/ccHYyRJz.s:743    .text:00000000000003b8 .L52
     /tmp/ccHYyRJz.s:407    .text:0000000000000220 .L60
     /tmp/ccHYyRJz.s:418    .text:0000000000000234 .L61
     /tmp/ccHYyRJz.s:431    .text:000000000000024c .L62
     /tmp/ccHYyRJz.s:445    .text:000000000000025c .L48
     /tmp/ccHYyRJz.s:1241   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccHYyRJz.s:2205   .debug_str:0000000000000189 .LASF38
     /tmp/ccHYyRJz.s:2223   .debug_str:00000000000002e1 .LASF39
     /tmp/ccHYyRJz.s:2225   .debug_str:00000000000002f9 .LASF40
     /tmp/ccHYyRJz.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccHYyRJz.s:770    .text:00000000000003c0 .Letext0
     /tmp/ccHYyRJz.s:2151   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccHYyRJz.s:2209   .debug_str:0000000000000266 .LASF0
     /tmp/ccHYyRJz.s:2201   .debug_str:000000000000016a .LASF1
     /tmp/ccHYyRJz.s:2191   .debug_str:000000000000011d .LASF2
     /tmp/ccHYyRJz.s:2171   .debug_str:0000000000000082 .LASF4
     /tmp/ccHYyRJz.s:2199   .debug_str:0000000000000158 .LASF3
     /tmp/ccHYyRJz.s:2157   .debug_str:0000000000000023 .LASF5
     /tmp/ccHYyRJz.s:2153   .debug_str:0000000000000000 .LASF6
     /tmp/ccHYyRJz.s:2185   .debug_str:00000000000000da .LASF7
     /tmp/ccHYyRJz.s:2217   .debug_str:00000000000002b2 .LASF8
     /tmp/ccHYyRJz.s:2169   .debug_str:0000000000000074 .LASF9
     /tmp/ccHYyRJz.s:2249   .debug_str:00000000000003d8 .LASF10
     /tmp/ccHYyRJz.s:2187   .debug_str:00000000000000ed .LASF11
     /tmp/ccHYyRJz.s:2235   .debug_str:0000000000000364 .LASF12
     /tmp/ccHYyRJz.s:2213   .debug_str:000000000000027f .LASF13
     /tmp/ccHYyRJz.s:2203   .debug_str:000000000000017d .LASF14
     /tmp/ccHYyRJz.s:2179   .debug_str:00000000000000b5 .LASF15
GAS LISTING /tmp/ccHYyRJz.s 			page 28


     /tmp/ccHYyRJz.s:2219   .debug_str:00000000000002c2 .LASF16
     /tmp/ccHYyRJz.s:2155   .debug_str:0000000000000013 .LASF20
     /tmp/ccHYyRJz.s:2233   .debug_str:0000000000000359 .LASF41
     /tmp/ccHYyRJz.s:2159   .debug_str:000000000000002a .LASF17
     /tmp/ccHYyRJz.s:2247   .debug_str:00000000000003d3 .LASF18
     /tmp/ccHYyRJz.s:2245   .debug_str:00000000000003ce .LASF19
     /tmp/ccHYyRJz.s:2207   .debug_str:000000000000024d .LASF22
     /tmp/ccHYyRJz.s:2161   .debug_str:000000000000002f .LASF21
     /tmp/ccHYyRJz.s:2227   .debug_str:0000000000000317 .LASF23
     /tmp/ccHYyRJz.s:2197   .debug_str:000000000000014c .LASF24
     /tmp/ccHYyRJz.s:2211   .debug_str:0000000000000273 .LASF25
     /tmp/ccHYyRJz.s:2165   .debug_str:0000000000000063 .LASF26
     /tmp/ccHYyRJz.s:2177   .debug_str:0000000000000099 .LASF42
     /tmp/ccHYyRJz.s:2237   .debug_str:0000000000000374 .LASF43
     /tmp/ccHYyRJz.s:2195   .debug_str:0000000000000130 .LASF44
     /tmp/ccHYyRJz.s:2175   .debug_str:000000000000008e .LASF45
     /tmp/ccHYyRJz.s:2163   .debug_str:0000000000000040 .LASF46
     /tmp/ccHYyRJz.s:2241   .debug_str:00000000000003a1 .LASF27
     /tmp/ccHYyRJz.s:2231   .debug_str:0000000000000338 .LASF28
     /tmp/ccHYyRJz.s:2221   .debug_str:00000000000002d8 .LASF47
     /tmp/ccHYyRJz.s:2189   .debug_str:00000000000000fc .LASF48
     /tmp/ccHYyRJz.s:2173   .debug_str:0000000000000089 .LASF29
     /tmp/ccHYyRJz.s:2243   .debug_str:00000000000003ab .LASF30
     /tmp/ccHYyRJz.s:2239   .debug_str:000000000000037e .LASF31
     /tmp/ccHYyRJz.s:2215   .debug_str:000000000000028f .LASF32
     /tmp/ccHYyRJz.s:384    .text:0000000000000200 .LFB2
     /tmp/ccHYyRJz.s:749    .text:00000000000003c0 .LFE2
     /tmp/ccHYyRJz.s:2183   .debug_str:00000000000000d3 .LASF36
     /tmp/ccHYyRJz.s:1791   .debug_loc:0000000000000000 .LLST7
     /tmp/ccHYyRJz.s:2079   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccHYyRJz.s:2167   .debug_str:000000000000006f .LASF33
     /tmp/ccHYyRJz.s:1839   .debug_loc:00000000000000b5 .LLST8
     /tmp/ccHYyRJz.s:2181   .debug_str:00000000000000cb .LASF34
     /tmp/ccHYyRJz.s:1862   .debug_loc:0000000000000124 .LLST9
     /tmp/ccHYyRJz.s:2193   .debug_str:000000000000012b .LASF35
     /tmp/ccHYyRJz.s:1881   .debug_loc:0000000000000180 .LLST10
     /tmp/ccHYyRJz.s:1900   .debug_loc:00000000000001dc .LLST12
     /tmp/ccHYyRJz.s:1915   .debug_loc:0000000000000225 .LLST11
     /tmp/ccHYyRJz.s:59     .text:0000000000000058 .LFB1
     /tmp/ccHYyRJz.s:378    .text:0000000000000200 .LFE1
     /tmp/ccHYyRJz.s:1926   .debug_loc:000000000000025b .LLST0
     /tmp/ccHYyRJz.s:1961   .debug_loc:00000000000002e5 .LLST1
     /tmp/ccHYyRJz.s:2229   .debug_str:0000000000000330 .LASF37
     /tmp/ccHYyRJz.s:1984   .debug_loc:0000000000000354 .LLST2
     /tmp/ccHYyRJz.s:1995   .debug_loc:000000000000038a .LLST3
     /tmp/ccHYyRJz.s:2033   .debug_loc:0000000000000435 .LLST4
     /tmp/ccHYyRJz.s:2044   .debug_loc:000000000000046b .LLST5
     /tmp/ccHYyRJz.s:2055   .debug_loc:00000000000004a1 .LLST6
     /tmp/ccHYyRJz.s:117    .text:00000000000000a8 .LVL6
     /tmp/ccHYyRJz.s:10     .text:0000000000000000 .LFB0
     /tmp/ccHYyRJz.s:53     .text:0000000000000058 .LFE0
     /tmp/ccHYyRJz.s:387    .text:0000000000000200 .LVL33
     /tmp/ccHYyRJz.s:399    .text:0000000000000214 .LVL34
     /tmp/ccHYyRJz.s:506    .text:0000000000000290 .LVL41
     /tmp/ccHYyRJz.s:508    .text:0000000000000294 .LVL42
     /tmp/ccHYyRJz.s:571    .text:00000000000002e4 .LVL48
     /tmp/ccHYyRJz.s:587    .text:00000000000002f0 .LVL49
GAS LISTING /tmp/ccHYyRJz.s 			page 29


     /tmp/ccHYyRJz.s:740    .text:00000000000003b4 .LVL59
     /tmp/ccHYyRJz.s:742    .text:00000000000003b8 .LVL60
     /tmp/ccHYyRJz.s:746    .text:00000000000003bc .LVL61
     /tmp/ccHYyRJz.s:404    .text:000000000000021c .LVL35
     /tmp/ccHYyRJz.s:492    .text:000000000000027c .LVL40
     /tmp/ccHYyRJz.s:550    .text:00000000000002c8 .LVL45
     /tmp/ccHYyRJz.s:629    .text:0000000000000328 .LVL52
     /tmp/ccHYyRJz.s:671    .text:0000000000000368 .LVL54
     /tmp/ccHYyRJz.s:732    .text:00000000000003b0 .LVL58
     /tmp/ccHYyRJz.s:406    .text:0000000000000220 .LVL36
     /tmp/ccHYyRJz.s:694    .text:0000000000000374 .LVL56
     /tmp/ccHYyRJz.s:439    .text:0000000000000258 .LVL37
     /tmp/ccHYyRJz.s:529    .text:00000000000002ac .LVL43
     /tmp/ccHYyRJz.s:608    .text:0000000000000304 .LVL50
     /tmp/ccHYyRJz.s:648    .text:0000000000000348 .LVL53
     /tmp/ccHYyRJz.s:729    .text:00000000000003a8 .LVL57
     /tmp/ccHYyRJz.s:534    .text:00000000000002b0 .LVL44
     /tmp/ccHYyRJz.s:554    .text:00000000000002cc .LVL46
     /tmp/ccHYyRJz.s:566    .text:00000000000002e0 .LVL47
     /tmp/ccHYyRJz.s:610    .text:0000000000000308 .LVL51
     /tmp/ccHYyRJz.s:488    .text:0000000000000278 .LVL39
     /tmp/ccHYyRJz.s:62     .text:0000000000000058 .LVL0
     /tmp/ccHYyRJz.s:79     .text:0000000000000074 .LVL1
     /tmp/ccHYyRJz.s:280    .text:0000000000000188 .LVL25
     /tmp/ccHYyRJz.s:284    .text:0000000000000190 .LVL26
     /tmp/ccHYyRJz.s:361    .text:00000000000001f8 .LVL31
     /tmp/ccHYyRJz.s:374    .text:00000000000001fc .LVL32
     /tmp/ccHYyRJz.s:90     .text:0000000000000088 .LVL2
     /tmp/ccHYyRJz.s:92     .text:000000000000008c .LVL3
     /tmp/ccHYyRJz.s:111    .text:00000000000000a0 .LVL5
     /tmp/ccHYyRJz.s:123    .text:00000000000000b8 .LVL7
     /tmp/ccHYyRJz.s:146    .text:00000000000000cc .LVL10
     /tmp/ccHYyRJz.s:174    .text:00000000000000f0 .LVL13
     /tmp/ccHYyRJz.s:190    .text:0000000000000108 .LVL15
     /tmp/ccHYyRJz.s:246    .text:0000000000000160 .LVL23
     /tmp/ccHYyRJz.s:266    .text:000000000000017c .LVL24
     /tmp/ccHYyRJz.s:150    .text:00000000000000d0 .LVL11
     /tmp/ccHYyRJz.s:153    .text:00000000000000d4 .LVL12
     /tmp/ccHYyRJz.s:214    .text:000000000000012c .LVL16
     /tmp/ccHYyRJz.s:220    .text:0000000000000138 .LVL17
     /tmp/ccHYyRJz.s:227    .text:0000000000000144 .LVL18
     /tmp/ccHYyRJz.s:229    .text:0000000000000148 .LVL19
     /tmp/ccHYyRJz.s:234    .text:0000000000000150 .LVL20
     /tmp/ccHYyRJz.s:238    .text:0000000000000154 .LVL21
     /tmp/ccHYyRJz.s:240    .text:0000000000000158 .LVL22
     /tmp/ccHYyRJz.s:133    .text:00000000000000bc .LVL8
     /tmp/ccHYyRJz.s:183    .text:00000000000000fc .LVL14
     /tmp/ccHYyRJz.s:137    .text:00000000000000c0 .LVL9
     /tmp/ccHYyRJz.s:338    .text:00000000000001d4 .LVL28
     /tmp/ccHYyRJz.s:345    .text:00000000000001e0 .LVL29
     /tmp/ccHYyRJz.s:359    .text:00000000000001f4 .LVL30
     /tmp/ccHYyRJz.s:774    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccHYyRJz.s:87     .text:0000000000000080 .LBB2
     /tmp/ccHYyRJz.s:96     .text:0000000000000090 .LBE2
     /tmp/ccHYyRJz.s:98     .text:0000000000000090 .LBB13
     /tmp/ccHYyRJz.s:113    .text:00000000000000a0 .LBE13
     /tmp/ccHYyRJz.s:125    .text:00000000000000b8 .LBB14
GAS LISTING /tmp/ccHYyRJz.s 			page 30


     /tmp/ccHYyRJz.s:270    .text:000000000000017c .LBE14
     /tmp/ccHYyRJz.s:287    .text:0000000000000190 .LBB15
     /tmp/ccHYyRJz.s:371    .text:00000000000001f8 .LBE15
     /tmp/ccHYyRJz.s:127    .text:00000000000000b8 .LBB4
     /tmp/ccHYyRJz.s:268    .text:000000000000017c .LBE4
     /tmp/ccHYyRJz.s:289    .text:0000000000000190 .LBB10
     /tmp/ccHYyRJz.s:369    .text:00000000000001f8 .LBE10
     /tmp/ccHYyRJz.s:186    .text:0000000000000100 .LBB6
     /tmp/ccHYyRJz.s:192    .text:0000000000000108 .LBE6
     /tmp/ccHYyRJz.s:291    .text:0000000000000190 .LBB7
     /tmp/ccHYyRJz.s:367    .text:00000000000001f8 .LBE7
     /tmp/ccHYyRJz.s:401    .text:0000000000000214 .LBB16
     /tmp/ccHYyRJz.s:451    .text:0000000000000260 .LBE16
     /tmp/ccHYyRJz.s:453    .text:0000000000000260 .LBB43
     /tmp/ccHYyRJz.s:463    .text:0000000000000264 .LBE43
     /tmp/ccHYyRJz.s:465    .text:0000000000000264 .LBB44
     /tmp/ccHYyRJz.s:578    .text:00000000000002e4 .LBE44
     /tmp/ccHYyRJz.s:590    .text:00000000000002f0 .LBB45
     /tmp/ccHYyRJz.s:687    .text:0000000000000370 .LBE45
     /tmp/ccHYyRJz.s:689    .text:0000000000000370 .LBB46
     /tmp/ccHYyRJz.s:737    .text:00000000000003b0 .LBE46
     /tmp/ccHYyRJz.s:409    .text:0000000000000220 .LBB18
     /tmp/ccHYyRJz.s:449    .text:0000000000000260 .LBE18
     /tmp/ccHYyRJz.s:455    .text:0000000000000260 .LBB35
     /tmp/ccHYyRJz.s:461    .text:0000000000000264 .LBE35
     /tmp/ccHYyRJz.s:467    .text:0000000000000264 .LBB36
     /tmp/ccHYyRJz.s:576    .text:00000000000002e4 .LBE36
     /tmp/ccHYyRJz.s:592    .text:00000000000002f0 .LBB37
     /tmp/ccHYyRJz.s:678    .text:0000000000000368 .LBE37
     /tmp/ccHYyRJz.s:692    .text:0000000000000374 .LBB38
     /tmp/ccHYyRJz.s:735    .text:00000000000003b0 .LBE38
     /tmp/ccHYyRJz.s:441    .text:0000000000000258 .LBB19
     /tmp/ccHYyRJz.s:448    .text:0000000000000260 .LBE19
     /tmp/ccHYyRJz.s:456    .text:0000000000000260 .LBB31
     /tmp/ccHYyRJz.s:460    .text:0000000000000264 .LBE31
     /tmp/ccHYyRJz.s:468    .text:0000000000000264 .LBB32
     /tmp/ccHYyRJz.s:575    .text:00000000000002e4 .LBE32
     /tmp/ccHYyRJz.s:593    .text:00000000000002f0 .LBB33
     /tmp/ccHYyRJz.s:677    .text:0000000000000368 .LBE33
     /tmp/ccHYyRJz.s:726    .text:00000000000003a0 .LBB34
     /tmp/ccHYyRJz.s:734    .text:00000000000003b0 .LBE34
     /tmp/ccHYyRJz.s:486    .text:0000000000000278 .LBB23
     /tmp/ccHYyRJz.s:502    .text:000000000000028c .LBE23
     /tmp/ccHYyRJz.s:653    .text:0000000000000348 .LBB24
     /tmp/ccHYyRJz.s:673    .text:0000000000000368 .LBE24
     /tmp/ccHYyRJz.s:512    .text:0000000000000294 .LBB26
     /tmp/ccHYyRJz.s:573    .text:00000000000002e4 .LBE26
     /tmp/ccHYyRJz.s:595    .text:00000000000002f0 .LBB27
     /tmp/ccHYyRJz.s:650    .text:0000000000000348 .LBE27

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
